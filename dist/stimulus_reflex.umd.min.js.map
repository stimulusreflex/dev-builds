{"version":3,"file":"stimulus_reflex.umd.min.js","sources":["../javascript/schema.js","../javascript/debug.js","../javascript/reflex_store.js","../javascript/log.js","../javascript/deprecate.js","../javascript/utils.js","../javascript/attributes.js","../javascript/isolation_mode.js","../javascript/lifecycle.js","../javascript/controllers.js","../javascript/reflexes.js","../javascript/reflex_data.js","../javascript/transports/action_cable.js","../javascript/callbacks.js","../javascript/stimulus_reflex.js","../javascript/index.js"],"sourcesContent":["const defaultSchema = {\n  reflexAttribute: 'data-reflex',\n  reflexPermanentAttribute: 'data-reflex-permanent',\n  reflexRootAttribute: 'data-reflex-root',\n  reflexSuppressLoggingAttribute: 'data-reflex-suppress-logging',\n  reflexDatasetAttribute: 'data-reflex-dataset',\n  reflexDatasetAllAttribute: 'data-reflex-dataset-all',\n  reflexSerializeFormAttribute: 'data-reflex-serialize-form',\n  reflexFormSelectorAttribute: 'data-reflex-form-selector',\n  reflexIncludeInnerHtmlAttribute: 'data-reflex-include-inner-html',\n  reflexIncludeTextContentAttribute: 'data-reflex-include-text-content'\n}\n\nlet schema = {}\n\nexport { schema, defaultSchema }\n\nexport default {\n  set (application) {\n    schema = { ...defaultSchema, ...application.schema }\n    for (const attribute in schema) {\n      Object.defineProperty(this, attribute.slice(0, -9), {\n        get: () => {\n          return schema[attribute]\n        }\n      })\n    }\n  }\n}\n","let debugging = false\n\nexport default {\n  get enabled () {\n    return debugging\n  },\n  get disabled () {\n    return !debugging\n  },\n  get value () {\n    return debugging\n  },\n  set (value) {\n    debugging = !!value\n  },\n  set debug (value) {\n    debugging = !!value\n  }\n}\n","const reflexes = {}\n\nexport { reflexes }\n","import Debug from './debug'\n\nimport { reflexes } from './reflex_store'\n\nconst request = (\n  reflexId,\n  target,\n  args,\n  controller,\n  element,\n  controllerElement\n) => {\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  reflex.timestamp = new Date()\n  console.log(`\\u2191 stimulus \\u2191 ${target}`, {\n    reflexId,\n    args,\n    controller,\n    element,\n    controllerElement\n  })\n}\n\nconst success = (event, halted) => {\n  const { detail } = event || {}\n  const { selector, payload } = detail || {}\n  const { reflexId, target, morph } = detail.stimulusReflex || {}\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  const progress =\n    reflex.totalOperations > 1\n      ? ` ${reflex.completedOperations}/${reflex.totalOperations}`\n      : ''\n  const duration = reflex.timestamp\n    ? `in ${new Date() - reflex.timestamp}ms`\n    : 'CLONED'\n  const operation = event.type\n    .split(':')[1]\n    .split('-')\n    .slice(1)\n    .join('_')\n  console.log(\n    `\\u2193 reflex \\u2193 ${target} \\u2192 ${selector ||\n      '\\u221E'}${progress} ${duration}`,\n    { reflexId, morph, operation, halted, payload }\n  )\n}\n\nconst error = event => {\n  const { detail } = event || {}\n  const { reflexId, target, payload } = detail.stimulusReflex || {}\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  const duration = reflex.timestamp\n    ? `in ${new Date() - reflex.timestamp}ms`\n    : 'CLONED'\n  console.log(\n    `\\u2193 reflex \\u2193 ${target} ${duration} %cERROR: ${event.detail.body}`,\n    'color: #f00;',\n    { reflexId, payload }\n  )\n}\n\nexport default { request, success, error }\n","let deprecationWarnings = true\n\nexport default {\n  get enabled () {\n    return deprecationWarnings\n  },\n  get disabled () {\n    return !deprecationWarnings\n  },\n  get value () {\n    return deprecationWarnings\n  },\n  set (value) {\n    deprecationWarnings = !!value\n  },\n  set deprecate (value) {\n    deprecationWarnings = !!value\n  }\n}\n","// uuid4 function taken from stackoverflow\n// https://stackoverflow.com/a/2117523/554903\n\nconst uuidv4 = () => {\n  const crypto = window.crypto || window.msCrypto\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16)\n  )\n}\n\nconst serializeForm = (form, options = {}) => {\n  if (!form) return ''\n\n  const w = options.w || window\n  const { element } = options\n  const formData = new w.FormData(form)\n  const data = Array.from(formData, e => e.map(encodeURIComponent).join('='))\n  const submitButton = form.querySelector('input[type=submit]')\n  if (\n    element &&\n    element.name &&\n    element.nodeName === 'INPUT' &&\n    element.type === 'submit'\n  ) {\n    data.push(\n      `${encodeURIComponent(element.name)}=${encodeURIComponent(element.value)}`\n    )\n  } else if (submitButton && submitButton.name) {\n    data.push(\n      `${encodeURIComponent(submitButton.name)}=${encodeURIComponent(\n        submitButton.value\n      )}`\n    )\n  }\n  return Array.from(data).join('&')\n}\n\nconst camelize = (value, uppercaseFirstLetter = true) => {\n  if (typeof value !== 'string') return ''\n  value = value\n    .replace(/[\\s_](.)/g, $1 => $1.toUpperCase())\n    .replace(/[\\s_]/g, '')\n    .replace(/^(.)/, $1 => $1.toLowerCase())\n\n  if (uppercaseFirstLetter)\n    value = value.substr(0, 1).toUpperCase() + value.substr(1)\n\n  return value\n}\n\nconst debounce = (callback, delay = 250) => {\n  let timeoutId\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      callback(...args)\n    }, delay)\n  }\n}\n\nconst extractReflexName = reflexString => {\n  const match = reflexString.match(/(?:.*->)?(.*?)(?:Reflex)?#/)\n\n  return match ? match[1] : ''\n}\n\nconst emitEvent = (event, detail) => {\n  document.dispatchEvent(\n    new CustomEvent(event, {\n      bubbles: true,\n      cancelable: false,\n      detail\n    })\n  )\n  if (window.jQuery) window.jQuery(document).trigger(event, detail)\n}\n\n// construct a valid xPath for an element in the DOM\nconst elementToXPath = element => {\n  if (element.id !== '') return \"//*[@id='\" + element.id + \"']\"\n  if (element === document.body) return '/html/body'\n\n  let ix = 0\n  const siblings = element?.parentNode ? element.parentNode.childNodes : []\n\n  for (var i = 0; i < siblings.length; i++) {\n    const sibling = siblings[i]\n    if (sibling === element) {\n      const computedPath = elementToXPath(element.parentNode)\n      const tagName = element.tagName.toLowerCase()\n      const ixInc = ix + 1\n      return `${computedPath}/${tagName}[${ixInc}]`\n    }\n\n    if (sibling.nodeType === 1 && sibling.tagName === element.tagName) {\n      ix++\n    }\n  }\n}\n\nconst XPathToElement = xpath => {\n  return document.evaluate(\n    xpath,\n    document,\n    null,\n    XPathResult.FIRST_ORDERED_NODE_TYPE,\n    null\n  ).singleNodeValue\n}\n\nconst XPathToArray = (xpath, reverse = false) => {\n  const snapshotList = document.evaluate(\n    xpath,\n    document,\n    null,\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  )\n\n  const snapshots = []\n\n  for (let i = 0; i < snapshotList.snapshotLength; i++) {\n    snapshots.push(snapshotList.snapshotItem(i))\n  }\n\n  return reverse ? snapshots.reverse() : snapshots\n}\n\nexport {\n  uuidv4,\n  serializeForm,\n  camelize,\n  debounce,\n  extractReflexName,\n  emitEvent,\n  elementToXPath,\n  XPathToElement,\n  XPathToArray\n}\n","import Schema from './schema'\nimport Debug from './debug'\nimport Deprecate from './deprecate'\n\nimport { elementToXPath, XPathToArray } from './utils'\n\nconst multipleInstances = element => {\n  if (['checkbox', 'radio'].includes(element.type)) {\n    return (\n      document.querySelectorAll(\n        `input[type=\"${element.type}\"][name=\"${element.name}\"]`\n      ).length > 1\n    )\n  }\n  return false\n}\nconst collectCheckedOptions = element => {\n  return Array.from(element.querySelectorAll('option:checked'))\n    .concat(\n      Array.from(\n        document.querySelectorAll(\n          `input[type=\"${element.type}\"][name=\"${element.name}\"]`\n        )\n      ).filter(elem => elem.checked)\n    )\n    .map(o => o.value)\n}\n\n// Returns a string value for the passed array.\n//\n//   attributeValue(['', 'one', null, 'two', 'three ']) // 'one two three'\n//\nconst attributeValue = (values = []) => {\n  const value = values\n    .filter(v => v && String(v).length)\n    .map(v => v.trim())\n    .join(' ')\n    .trim()\n  return value.length ? value : null\n}\n\n// Returns an array for the passed string value by splitting on whitespace.\n//\n//   attributeValues('one two three ') // ['one', 'two', 'three']\n//\nconst attributeValues = value => {\n  if (!value) return []\n  if (!value.length) return []\n  return value.split(' ').filter(v => v.trim().length)\n}\n\n// Extracts attributes from a DOM element.\n//\nconst extractElementAttributes = element => {\n  let attrs = Array.from(element.attributes).reduce((memo, attr) => {\n    memo[attr.name] = attr.value\n    return memo\n  }, {})\n\n  attrs.checked = !!element.checked\n  attrs.selected = !!element.selected\n  attrs.tag_name = element.tagName\n\n  if (element.tagName.match(/select/i) || multipleInstances(element)) {\n    const collectedOptions = collectCheckedOptions(element)\n    attrs.values = collectedOptions\n    attrs.value = collectedOptions.join(',')\n  } else {\n    attrs.value = element.value\n  }\n  return attrs\n}\n\n// Returns an array of elements for the provided tokens.\n// Tokens is an array of space separated string coming from the `data-reflex-dataset`\n// or `data-reflex-dataset-all` attribute.\n//\nconst getElementsFromTokens = (element, tokens) => {\n  if (!tokens || tokens.length === 0) return []\n\n  let elements = [element]\n\n  const xPath = elementToXPath(element)\n\n  tokens.forEach(token => {\n    try {\n      switch (token) {\n        case 'combined':\n          if (Deprecate.enabled)\n            console.warn(\n              \"In the next version of StimulusReflex, the 'combined' option to data-reflex-dataset will become 'ancestors'.\"\n            )\n          elements = [\n            ...elements,\n            ...XPathToArray(`${xPath}/ancestor::*`, true)\n          ]\n          break\n        case 'ancestors':\n          elements = [\n            ...elements,\n            ...XPathToArray(`${xPath}/ancestor::*`, true)\n          ]\n          break\n        case 'parent':\n          elements = [...elements, ...XPathToArray(`${xPath}/parent::*`)]\n          break\n        case 'siblings':\n          elements = [\n            ...elements,\n            ...XPathToArray(\n              `${xPath}/preceding-sibling::*|${xPath}/following-sibling::*`\n            )\n          ]\n          break\n        case 'children':\n          elements = [...elements, ...XPathToArray(`${xPath}/child::*`)]\n          break\n        case 'descendants':\n          elements = [...elements, ...XPathToArray(`${xPath}/descendant::*`)]\n          break\n        default:\n          elements = [...elements, ...document.querySelectorAll(token)]\n      }\n    } catch (error) {\n      if (Debug.enabled) console.error(error)\n    }\n  })\n\n  return elements\n}\n\n// Extracts the dataset of an element and combines it with the data attributes from all specified tokens\n//\nconst extractElementDataset = element => {\n  const dataset = element.attributes[Schema.reflexDataset]\n  const allDataset = element.attributes[Schema.reflexDatasetAll]\n\n  const tokens = (dataset && dataset.value.split(' ')) || []\n  const allTokens = (allDataset && allDataset.value.split(' ')) || []\n\n  const datasetElements = getElementsFromTokens(element, tokens)\n  const datasetAllElements = getElementsFromTokens(element, allTokens)\n\n  const datasetAttributes = datasetElements.reduce((acc, ele) => {\n    return { ...extractDataAttributes(ele), ...acc }\n  }, {})\n\n  const reflexElementAttributes = extractDataAttributes(element)\n\n  const elementDataset = {\n    dataset: { ...reflexElementAttributes, ...datasetAttributes },\n    datasetAll: {}\n  }\n\n  datasetAllElements.forEach(element => {\n    const elementAttributes = extractDataAttributes(element)\n\n    Object.keys(elementAttributes).forEach(key => {\n      const value = elementAttributes[key]\n\n      if (\n        elementDataset.datasetAll[key] &&\n        Array.isArray(elementDataset.datasetAll[key])\n      ) {\n        elementDataset.datasetAll[key].push(value)\n      } else {\n        elementDataset.datasetAll[key] = [value]\n      }\n    })\n  })\n\n  return elementDataset\n}\n\n// Extracts all data attributes from a DOM element.\n//\nconst extractDataAttributes = element => {\n  let attrs = {}\n\n  if (element && element.attributes) {\n    Array.from(element.attributes).forEach(attr => {\n      if (attr.name.startsWith('data-')) {\n        attrs[attr.name] = attr.value\n      }\n    })\n  }\n\n  return attrs\n}\n\nexport {\n  attributeValue,\n  attributeValues,\n  extractElementAttributes,\n  extractElementDataset,\n  extractDataAttributes\n}\n","let isolationMode = false\n\nexport default {\n  get disabled () {\n    return !isolationMode\n  },\n  set (value) {\n    isolationMode = value\n  }\n}\n","import Debug from './debug'\n\nimport { camelize } from './utils'\nimport { reflexes } from './reflex_store'\n\n// Invokes a lifecycle method on a StimulusReflex controller.\n//\n// - stage - the lifecycle stage\n//   * before\n//   * success\n//   * error\n//   * halted\n//   * after\n//   * finalize\n//\n// - reflexElement - the element that triggered the Reflex (not necessarily the StimulusReflex Controller Element)\n// - controllerElement - the element holding the StimulusReflex Controller\n// - reflexId - the UUIDv4 which uniquely identifies the Reflex\n// - payload - the optional \"return value\" from the Reflex method\n//\nconst invokeLifecycleMethod = (\n  stage,\n  reflexElement,\n  controllerElement,\n  reflexId,\n  payload\n) => {\n  if (!controllerElement || !controllerElement.reflexData[reflexId]) return\n\n  const controller = controllerElement.reflexController[reflexId]\n  const reflex = controllerElement.reflexData[reflexId].target\n  const reflexMethodName = reflex.split('#')[1]\n\n  const specificLifecycleMethodName = ['before', 'after', 'finalize'].includes(\n    stage\n  )\n    ? `${stage}${camelize(reflexMethodName)}`\n    : `${camelize(reflexMethodName, false)}${camelize(stage)}`\n  const specificLifecycleMethod = controller[specificLifecycleMethodName]\n\n  const genericLifecycleMethodName = ['before', 'after', 'finalize'].includes(\n    stage\n  )\n    ? `${stage}Reflex`\n    : `reflex${camelize(stage)}`\n  const genericLifecycleMethod = controller[genericLifecycleMethodName]\n\n  if (typeof specificLifecycleMethod === 'function') {\n    specificLifecycleMethod.call(\n      controller,\n      reflexElement,\n      reflex,\n      controllerElement.reflexError[reflexId],\n      reflexId,\n      payload\n    )\n  }\n\n  if (typeof genericLifecycleMethod === 'function') {\n    genericLifecycleMethod.call(\n      controller,\n      reflexElement,\n      reflex,\n      controllerElement.reflexError[reflexId],\n      reflexId,\n      payload\n    )\n  }\n\n  if (reflexes[reflexId] && stage === reflexes[reflexId].finalStage) {\n    Reflect.deleteProperty(controllerElement.reflexController, reflexId)\n    Reflect.deleteProperty(controllerElement.reflexData, reflexId)\n    Reflect.deleteProperty(controllerElement.reflexError, reflexId)\n    // Removing this on a trial basis\n    // 1. Prevents race condition with CR broadcasts\n    // 2. Planning to remove it for v4 as part of queueing refactor\n    // 3. Removing reflexes shouldn't be the responsibility of the lifecycle subsystem\n    // Reflect.deleteProperty(reflexes, reflexId)\n  }\n}\n\ndocument.addEventListener(\n  'stimulus-reflex:before',\n  event =>\n    invokeLifecycleMethod(\n      'before',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:success',\n  event => {\n    invokeLifecycleMethod(\n      'success',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n    dispatchLifecycleEvent(\n      'after',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n  },\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:nothing',\n  event => {\n    dispatchLifecycleEvent(\n      'success',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n  },\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:error',\n  event => {\n    invokeLifecycleMethod(\n      'error',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n    dispatchLifecycleEvent(\n      'after',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n  },\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:halted',\n  event =>\n    invokeLifecycleMethod(\n      'halted',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:after',\n  event =>\n    invokeLifecycleMethod(\n      'after',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:finalize',\n  event =>\n    invokeLifecycleMethod(\n      'finalize',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\n// Dispatches a lifecycle event on document\n//\n// - stage - the lifecycle stage\n//   * before\n//   * success\n//   * error\n//   * halted\n//   * after\n//   * finalize\n//\n// - reflexElement - the element that triggered the Reflex (not necessarily the StimulusReflex Controller Element)\n//\n// - controllerElement - the element holding the StimulusReflex Controller\n//\n// - reflexId - the UUIDv4 which uniquely identifies the Reflex\n//\n// - payload - optional Reflex return value\n//\nconst dispatchLifecycleEvent = (\n  stage,\n  reflexElement,\n  controllerElement,\n  reflexId,\n  payload\n) => {\n  if (!controllerElement) {\n    if (Debug.enabled && !reflexes[reflexId].warned) {\n      console.warn(\n        `StimulusReflex was not able execute callbacks or emit events for \"${stage}\" or later life-cycle stages for this Reflex. The StimulusReflex Controller Element is no longer present in the DOM. Could you move the StimulusReflex Controller to an element higher in your DOM?`\n      )\n      reflexes[reflexId].warned = true\n    }\n    return\n  }\n\n  if (\n    !controllerElement.reflexController ||\n    (controllerElement.reflexController &&\n      !controllerElement.reflexController[reflexId])\n  ) {\n    if (Debug.enabled && !reflexes[reflexId].warned) {\n      console.warn(\n        `StimulusReflex detected that the StimulusReflex Controller responsible for this Reflex has been replaced with a new instance. Callbacks and events for \"${stage}\" or later life-cycle stages cannot be executed.`\n      )\n      reflexes[reflexId].warned = true\n    }\n    return\n  }\n\n  const { target } = controllerElement.reflexData[reflexId] || {}\n  const controller = controllerElement.reflexController[reflexId] || {}\n  const event = `stimulus-reflex:${stage}`\n  const action = `${event}:${target.split('#')[1]}`\n  const detail = {\n    reflex: target,\n    controller,\n    reflexId,\n    element: reflexElement,\n    payload\n  }\n  const options = { bubbles: true, cancelable: false, detail }\n\n  controllerElement.dispatchEvent(new CustomEvent(event, options))\n  controllerElement.dispatchEvent(new CustomEvent(action, options))\n\n  if (window.jQuery) {\n    window.jQuery(controllerElement).trigger(event, detail)\n    window.jQuery(controllerElement).trigger(action, detail)\n  }\n}\n\nexport { dispatchLifecycleEvent }\n","import Schema from './schema'\n\nimport { attributeValues } from './attributes'\nimport { extractReflexName } from './utils'\n\n// Returns StimulusReflex controllers local to the passed element based on the data-controller attribute.\n//\nconst localReflexControllers = (app, element) => {\n  return attributeValues(element.getAttribute(Schema.controller)).reduce(\n    (memo, name) => {\n      const controller = app.getControllerForElementAndIdentifier(element, name)\n      if (controller && controller.StimulusReflex) memo.push(controller)\n      return memo\n    },\n    []\n  )\n}\n\n// Returns all StimulusReflex controllers for the passed element.\n// Traverses DOM ancestors starting with element.\n//\nconst allReflexControllers = (app, element) => {\n  let controllers = []\n  while (element) {\n    controllers = controllers.concat(localReflexControllers(app, element))\n    element = element.parentElement\n  }\n  return controllers\n}\n\n// Given a reflex string such as 'click->TestReflex#create' and a list of\n// controllers. It will find the matching controller based on the controller's\n// identifier. e.g. Given these controller identifiers ['foo', 'bar', 'test'],\n// it would select the 'test' controller.\nconst findControllerByReflexName = (reflexName, controllers) => {\n  const controller = controllers.find(controller => {\n    if (!controller.identifier) return\n\n    return (\n      extractReflexName(reflexName)\n        .replace(/([a-z0–9])([A-Z])/g, '$1-$2')\n        .replace(/(::)/g, '--')\n        .toLowerCase() === controller.identifier\n    )\n  })\n\n  return controller || controllers[0]\n}\n\nexport { allReflexControllers, findControllerByReflexName }\n","import CableReady from 'cable_ready'\n\nimport Debug from './debug'\nimport Schema from './schema'\nimport IsolationMode from './isolation_mode'\n\nimport { reflexes } from './reflex_store'\nimport { dispatchLifecycleEvent } from './lifecycle'\nimport { XPathToElement, debounce, emitEvent } from './utils'\nimport { allReflexControllers, findControllerByReflexName } from './controllers'\nimport { attributeValue, attributeValues } from './attributes'\n\nconst received = data => {\n  if (!data.cableReady) return\n\n  if (data.version.replace('.pre', '-pre') !== CableReady.version) {\n    if (Debug.enabled)\n      console.error(\n        `Reflex failed due to cable_ready gem/NPM package version mismatch. Package versions must match exactly.\\nNote that if you are using pre-release builds, gems use the \"x.y.z.preN\" version format, while NPM packages use \"x.y.z-preN\".\\n\\ncable_ready gem: ${data.version}\\ncable_ready NPM: ${CableReady.version}`\n      )\n    return\n  }\n\n  let reflexOperations = []\n\n  for (let i = data.operations.length - 1; i >= 0; i--) {\n    if (data.operations[i].stimulusReflex) {\n      reflexOperations.push(data.operations[i])\n      data.operations.splice(i, 1)\n    }\n  }\n\n  if (\n    reflexOperations.some(\n      operation => operation.stimulusReflex.url !== location.href\n    )\n  ) {\n    return\n  }\n\n  let reflexData\n\n  if (reflexOperations.length) {\n    reflexData = reflexOperations[0].stimulusReflex\n    reflexData.payload = reflexOperations[0].payload\n  }\n\n  if (reflexData) {\n    const { reflexId, payload } = reflexData\n\n    if (!reflexes[reflexId] && IsolationMode.disabled) {\n      const controllerElement = XPathToElement(reflexData.xpathController)\n      const reflexElement = XPathToElement(reflexData.xpathElement)\n\n      controllerElement.reflexController =\n        controllerElement.reflexController || {}\n      controllerElement.reflexData = controllerElement.reflexData || {}\n      controllerElement.reflexError = controllerElement.reflexError || {}\n\n      controllerElement.reflexController[\n        reflexId\n      ] = reflexes.app.getControllerForElementAndIdentifier(\n        controllerElement,\n        reflexData.reflexController\n      )\n\n      controllerElement.reflexData[reflexId] = reflexData\n\n      dispatchLifecycleEvent(\n        'before',\n        reflexElement,\n        controllerElement,\n        reflexId,\n        payload\n      )\n\n      registerReflex(reflexData)\n    }\n\n    if (reflexes[reflexId]) {\n      reflexes[reflexId].totalOperations = reflexOperations.length\n      reflexes[reflexId].pendingOperations = reflexOperations.length\n      reflexes[reflexId].completedOperations = 0\n      reflexes[reflexId].piggybackOperations = data.operations\n      CableReady.perform(reflexOperations)\n    }\n  } else {\n    if (data.operations.length && reflexes[data.operations[0].reflexId]) {\n      CableReady.perform(data.operations)\n    }\n  }\n}\n\nconst registerReflex = data => {\n  const { reflexId } = data\n  reflexes[reflexId] = { finalStage: 'finalize' }\n\n  const promise = new Promise((resolve, reject) => {\n    reflexes[reflexId].promise = {\n      resolve,\n      reject,\n      data\n    }\n  })\n\n  promise.reflexId = reflexId\n\n  if (Debug.enabled) promise.catch(() => {})\n\n  return promise\n}\n\n// compute the DOM element(s) which will be the morph root\n// use the data-reflex-root attribute on the reflex or the controller\n// optional value is a CSS selector(s); comma-separated list\n// order of preference is data-reflex, data-controller, document body (default)\nconst getReflexRoots = element => {\n  let list = []\n  while (list.length === 0 && element) {\n    let reflexRoot = element.getAttribute(Schema.reflexRoot)\n    if (reflexRoot) {\n      if (reflexRoot.length === 0 && element.id) reflexRoot = `#${element.id}`\n      const selectors = reflexRoot.split(',').filter(s => s.trim().length)\n      if (Debug.enabled && selectors.length === 0) {\n        console.error(\n          `No value found for ${Schema.reflexRoot}. Add an #id to the element or provide a value for ${Schema.reflexRoot}.`,\n          element\n        )\n      }\n      list = list.concat(selectors.filter(s => document.querySelector(s)))\n    }\n    element = element.parentElement\n      ? element.parentElement.closest(`[${Schema.reflexRoot}]`)\n      : null\n  }\n  return list\n}\n\n// Sets up declarative reflex behavior.\n// Any elements that define data-reflex will automatically be wired up with the default StimulusReflexController.\n//\nconst setupDeclarativeReflexes = debounce(() => {\n  document.querySelectorAll(`[${Schema.reflex}]`).forEach(element => {\n    const controllers = attributeValues(element.getAttribute(Schema.controller))\n    const reflexAttributeNames = attributeValues(\n      element.getAttribute(Schema.reflex)\n    )\n    const actions = attributeValues(element.getAttribute(Schema.action))\n    reflexAttributeNames.forEach(reflexName => {\n      const controller = findControllerByReflexName(\n        reflexName,\n        allReflexControllers(reflexes.app, element)\n      )\n      let action\n      if (controller) {\n        action = `${reflexName.split('->')[0]}->${\n          controller.identifier\n        }#__perform`\n        if (!actions.includes(action)) actions.push(action)\n      } else {\n        action = `${reflexName.split('->')[0]}->stimulus-reflex#__perform`\n        if (!controllers.includes('stimulus-reflex')) {\n          controllers.push('stimulus-reflex')\n        }\n        if (!actions.includes(action)) actions.push(action)\n      }\n    })\n    const controllerValue = attributeValue(controllers)\n    const actionValue = attributeValue(actions)\n    if (\n      controllerValue &&\n      element.getAttribute(Schema.controller) != controllerValue\n    ) {\n      element.setAttribute(Schema.controller, controllerValue)\n    }\n    if (actionValue && element.getAttribute(Schema.action) != actionValue)\n      element.setAttribute(Schema.action, actionValue)\n  })\n  emitEvent('stimulus-reflex:ready')\n}, 20)\n\nexport { received, registerReflex, getReflexRoots, setupDeclarativeReflexes }\n","import Schema from './schema'\n\nimport { extractElementAttributes, extractElementDataset } from './attributes'\nimport { getReflexRoots } from './reflexes'\nimport { uuidv4 } from './utils'\nimport { elementToXPath } from './utils'\n\nimport { version } from '../package.json'\n\nexport default class ReflexData {\n  constructor (\n    options,\n    reflexElement,\n    controllerElement,\n    reflexController,\n    permanentAttributeName,\n    target,\n    args,\n    url,\n    tabId\n  ) {\n    this.options = options\n    this.reflexElement = reflexElement\n    this.controllerElement = controllerElement\n    this.reflexController = reflexController\n    this.permanentAttributeName = permanentAttributeName\n    this.target = target\n    this.args = args\n    this.url = url\n    this.tabId = tabId\n  }\n\n  get attrs () {\n    this._attrs =\n      this._attrs ||\n      this.options['attrs'] ||\n      extractElementAttributes(this.reflexElement)\n\n    return this._attrs\n  }\n\n  get reflexId () {\n    this._reflexId = this._reflexId || this.options['reflexId'] || uuidv4()\n    return this._reflexId\n  }\n\n  get selectors () {\n    this._selectors =\n      this._selectors ||\n      this.options['selectors'] ||\n      getReflexRoots(this.reflexElement)\n\n    return typeof this._selectors === 'string'\n      ? [this._selectors]\n      : this._selectors\n  }\n\n  get resolveLate () {\n    return this.options['resolveLate'] || false\n  }\n\n  get dataset () {\n    this._dataset = this._dataset || extractElementDataset(this.reflexElement)\n    return this._dataset\n  }\n\n  get innerHTML () {\n    return this.includeInnerHtml ? this.reflexElement.innerHTML : ''\n  }\n\n  get textContent () {\n    return this.includeTextContent ? this.reflexElement.textContent : ''\n  }\n\n  get xpathController () {\n    return elementToXPath(this.controllerElement)\n  }\n\n  get xpathElement () {\n    return elementToXPath(this.reflexElement)\n  }\n\n  get formSelector () {\n    const attr = this.reflexElement.attributes[Schema.reflexFormSelector]\n      ? this.reflexElement.attributes[Schema.reflexFormSelector].value\n      : undefined\n    return this.options['formSelector'] || attr\n  }\n\n  get includeInnerHtml () {\n    const attr =\n      this.reflexElement.attributes[Schema.reflexIncludeInnerHtml] || false\n    return this.options['includeInnerHTML'] || attr\n      ? attr.value !== 'false'\n      : false\n  }\n\n  get includeTextContent () {\n    const attr =\n      this.reflexElement.attributes[Schema.reflexIncludeTextContent] || false\n    return this.options['includeTextContent'] || attr\n      ? attr.value !== 'false'\n      : false\n  }\n\n  get suppressLogging () {\n    return (\n      this.options['suppressLogging'] ||\n      this.reflexElement.attributes[Schema.reflexSuppressLogging] ||\n      false\n    )\n  }\n\n  valueOf () {\n    return {\n      attrs: this.attrs,\n      dataset: this.dataset,\n      selectors: this.selectors,\n      reflexId: this.reflexId,\n      resolveLate: this.resolveLate,\n      suppressLogging: this.suppressLogging,\n      xpathController: this.xpathController,\n      xpathElement: this.xpathElement,\n      inner_html: this.innerHTML,\n      text_content: this.textContent,\n      formSelector: this.formSelector,\n      reflexController: this.reflexController,\n      permanentAttributeName: this.permanentAttributeName,\n      target: this.target,\n      args: this.args,\n      url: this.url,\n      tabId: this.tabId,\n      version\n    }\n  }\n}\n","import { createConsumer } from '@rails/actioncable'\nimport { received } from '../reflexes'\nimport { emitEvent } from '../utils'\n\nlet consumer\nlet params\nlet subscriptionActive\n\nconst createSubscription = controller => {\n  consumer = consumer || controller.application.consumer || createConsumer()\n  const { channel } = controller.StimulusReflex\n  const subscription = { channel, ...params }\n  const identifier = JSON.stringify(subscription)\n\n  controller.StimulusReflex.subscription =\n    consumer.subscriptions.findAll(identifier)[0] ||\n    consumer.subscriptions.create(subscription, {\n      received,\n      connected,\n      rejected,\n      disconnected\n    })\n}\n\nconst connected = () => {\n  subscriptionActive = true\n  document.body.classList.replace(\n    'stimulus-reflex-disconnected',\n    'stimulus-reflex-connected'\n  )\n  emitEvent('stimulus-reflex:connected')\n  emitEvent('stimulus-reflex:action-cable:connected')\n}\n\nconst rejected = () => {\n  subscriptionActive = false\n  document.body.classList.replace(\n    'stimulus-reflex-connected',\n    'stimulus-reflex-disconnected'\n  )\n  emitEvent('stimulus-reflex:rejected')\n  emitEvent('stimulus-reflex:action-cable:rejected')\n  if (Debug.enabled) console.warn('Channel subscription was rejected.')\n}\n\nconst disconnected = willAttemptReconnect => {\n  subscriptionActive = false\n  document.body.classList.replace(\n    'stimulus-reflex-connected',\n    'stimulus-reflex-disconnected'\n  )\n  emitEvent('stimulus-reflex:disconnected', willAttemptReconnect)\n  emitEvent('stimulus-reflex:action-cable:disconnected', willAttemptReconnect)\n}\n\nexport default {\n  consumer,\n  params,\n  get subscriptionActive () {\n    return subscriptionActive\n  },\n  createSubscription,\n  connected,\n  rejected,\n  disconnected,\n  set (consumerValue, paramsValue) {\n    consumer = consumerValue\n    params = paramsValue\n  }\n}\n","import CableReady from 'cable_ready'\n\nimport Log from './log'\n\nimport { reflexes } from './reflex_store'\nimport { dispatchLifecycleEvent } from './lifecycle'\nimport { XPathToElement } from './utils'\n\nconst beforeDOMUpdate = event => {\n  const { stimulusReflex, payload } = event.detail || {}\n  if (!stimulusReflex) return\n  const { reflexId, xpathElement, xpathController } = stimulusReflex\n  const controllerElement = XPathToElement(xpathController)\n  const reflexElement = XPathToElement(xpathElement)\n  const reflex = reflexes[reflexId]\n  const { promise } = reflex\n\n  reflex.pendingOperations--\n\n  if (reflex.pendingOperations > 0) return\n\n  if (!stimulusReflex.resolveLate)\n    setTimeout(() =>\n      promise.resolve({\n        element: reflexElement,\n        event,\n        data: promise.data,\n        payload,\n        reflexId,\n        toString: () => ''\n      })\n    )\n\n  setTimeout(() =>\n    dispatchLifecycleEvent(\n      'success',\n      reflexElement,\n      controllerElement,\n      reflexId,\n      payload\n    )\n  )\n}\n\nconst afterDOMUpdate = event => {\n  const { stimulusReflex, payload } = event.detail || {}\n  if (!stimulusReflex) return\n  const { reflexId, xpathElement, xpathController } = stimulusReflex\n  const controllerElement = XPathToElement(xpathController)\n  const reflexElement = XPathToElement(xpathElement)\n  const reflex = reflexes[reflexId]\n  const { promise } = reflex\n\n  reflex.completedOperations++\n\n  Log.success(event, false)\n\n  if (reflex.completedOperations < reflex.totalOperations) return\n\n  if (stimulusReflex.resolveLate)\n    setTimeout(() =>\n      promise.resolve({\n        element: reflexElement,\n        event,\n        data: promise.data,\n        payload,\n        reflexId,\n        toString: () => ''\n      })\n    )\n\n  setTimeout(() =>\n    dispatchLifecycleEvent(\n      'finalize',\n      reflexElement,\n      controllerElement,\n      reflexId,\n      payload\n    )\n  )\n\n  if (reflex.piggybackOperations.length)\n    CableReady.perform(reflex.piggybackOperations)\n}\n\nconst routeReflexEvent = event => {\n  const { stimulusReflex, payload, name, body } = event.detail || {}\n  const eventType = name.split('-')[2]\n  if (!stimulusReflex || !['nothing', 'halted', 'error'].includes(eventType))\n    return\n\n  const { reflexId, xpathElement, xpathController } = stimulusReflex\n  const reflexElement = XPathToElement(xpathElement)\n  const controllerElement = XPathToElement(xpathController)\n  const reflex = reflexes[reflexId]\n  const { promise } = reflex\n\n  if (controllerElement) {\n    controllerElement.reflexError = controllerElement.reflexError || {}\n    if (eventType === 'error') controllerElement.reflexError[reflexId] = body\n  }\n\n  switch (eventType) {\n    case 'nothing':\n      nothing(event, payload, promise, reflex, reflexElement)\n      break\n    case 'error':\n      error(event, payload, promise, reflex, reflexElement)\n      break\n    case 'halted':\n      halted(event, payload, promise, reflex, reflexElement)\n      break\n  }\n\n  setTimeout(() =>\n    dispatchLifecycleEvent(\n      eventType,\n      reflexElement,\n      controllerElement,\n      reflexId,\n      payload\n    )\n  )\n\n  if (reflex.piggybackOperations.length)\n    CableReady.perform(reflex.piggybackOperations)\n}\n\nconst nothing = (event, payload, promise, reflex, reflexElement) => {\n  reflex.finalStage = 'after'\n\n  Log.success(event, false)\n\n  setTimeout(() =>\n    promise.resolve({\n      data: promise.data,\n      element: reflexElement,\n      event,\n      payload,\n      reflexId: promise.data.reflexId,\n      toString: () => ''\n    })\n  )\n}\n\nconst halted = (event, payload, promise, reflex, reflexElement) => {\n  reflex.finalStage = 'halted'\n\n  Log.success(event, true)\n\n  setTimeout(() =>\n    promise.resolve({\n      data: promise.data,\n      element: reflexElement,\n      event,\n      payload,\n      reflexId: promise.data.reflexId,\n      toString: () => ''\n    })\n  )\n}\n\nconst error = (event, payload, promise, reflex, reflexElement) => {\n  reflex.finalStage = 'after'\n\n  Log.error(event)\n\n  setTimeout(() =>\n    promise.reject({\n      data: promise.data,\n      element: reflexElement,\n      event,\n      payload,\n      reflexId: promise.data.reflexId,\n      error: event.detail.body,\n      toString: () => event.detail.body\n    })\n  )\n}\n\nexport { beforeDOMUpdate, afterDOMUpdate, routeReflexEvent }\n","import { Controller } from '@hotwired/stimulus'\n\nimport Schema from './schema'\nimport Log from './log'\nimport Debug from './debug'\nimport Deprecate from './deprecate'\nimport ReflexData from './reflex_data'\nimport IsolationMode from './isolation_mode'\nimport ActionCableTransport from './transports/action_cable'\n\nimport { dispatchLifecycleEvent } from './lifecycle'\nimport { uuidv4, serializeForm } from './utils'\nimport { beforeDOMUpdate, afterDOMUpdate, routeReflexEvent } from './callbacks'\nimport { registerReflex, setupDeclarativeReflexes } from './reflexes'\nimport { reflexes } from './reflex_store'\nimport { attributeValues } from './attributes'\n\n// Default StimulusReflexController that is implicitly wired up as data-controller for any DOM elements\n// that have configured data-reflex. Note that this default can be overridden when initializing the application.\n// i.e. StimulusReflex.initialize(myStimulusApplication, MyCustomDefaultController);\n//\nclass StimulusReflexController extends Controller {\n  constructor (...args) {\n    super(...args)\n    register(this)\n  }\n}\n\n// Initializes StimulusReflex by registering the default Stimulus controller with the passed Stimulus application.\n//\n// - application  - the Stimulus application\n// - options\n//   * controller - [optional] the default StimulusReflexController\n//   * consumer   - [optional] the ActionCable consumer\n//   * debug      - [false] log all Reflexes to the console\n//   * params     - [{}] key/value parameters to send during channel subscription\n//   * isolate    - [false] restrict Reflex playback to the tab which initiated it\n//   * deprecate  - [true] show warnings regarding upcoming changes to the library\n//\nconst initialize = (\n  application,\n  { controller, consumer, debug, params, isolate, deprecate } = {}\n) => {\n  ActionCableTransport.set(consumer, params)\n  document.addEventListener(\n    'DOMContentLoaded',\n    () => {\n      document.body.classList.remove('stimulus-reflex-connected')\n      document.body.classList.add('stimulus-reflex-disconnected')\n      if (Deprecate.enabled && consumer)\n        console.warn(\n          \"Deprecation warning: the next version of StimulusReflex will obtain a reference to consumer via the Stimulus application object.\\nPlease add 'application.consumer = consumer' to your index.js after your Stimulus application has been established, and remove the consumer key from your StimulusReflex initialize() options object.\"\n        )\n      if (Deprecate.enabled && IsolationMode.disabled)\n        console.warn(\n          'Deprecation warning: the next version of StimulusReflex will standardize isolation mode, and the isolate option will be removed.\\nPlease update your applications to assume that every tab will be isolated.'\n        )\n    },\n    { once: true }\n  )\n  IsolationMode.set(!!isolate)\n  reflexes.app = application\n  Schema.set(application)\n  reflexes.app.register(\n    'stimulus-reflex',\n    controller || StimulusReflexController\n  )\n  Debug.set(!!debug)\n  if (typeof deprecate !== 'undefined') Deprecate.set(deprecate)\n  const observer = new MutationObserver(setupDeclarativeReflexes)\n  observer.observe(document.documentElement, {\n    attributeFilter: [Schema.reflex, Schema.action],\n    childList: true,\n    subtree: true\n  })\n}\n\n// Registers a Stimulus controller and extends it with StimulusReflex behavior\n//\n// controller - the Stimulus controller\n// options - [optional] configuration\n//\nconst register = (controller, options = {}) => {\n  const channel = 'StimulusReflex::Channel'\n  controller.StimulusReflex = { ...options, channel }\n  ActionCableTransport.createSubscription(controller)\n  Object.assign(controller, {\n    // Indicates if the ActionCable web socket connection is open.\n    // The connection must be open before calling stimulate.\n    //\n    isActionCableConnectionOpen () {\n      return this.StimulusReflex.subscription.consumer.connection.isOpen()\n    },\n\n    // Invokes a server side reflex method.\n    //\n    // - target - the reflex target (full name of the server side reflex) i.e. 'ReflexClassName#method'\n    // - reflexElement - [optional] the element that triggered the reflex, defaults to this.element\n    // - options - [optional] an object that contains at least one of attrs, reflexId, selectors, resolveLate, serializeForm\n    // - *args - remaining arguments are forwarded to the server side reflex method\n    //\n    stimulate () {\n      const url = location.href\n      const args = Array.from(arguments)\n      const target = args.shift() || 'StimulusReflex::Reflex#default_reflex'\n      const controllerElement = this.element\n      const reflexElement =\n        args[0] && args[0].nodeType === Node.ELEMENT_NODE\n          ? args.shift()\n          : controllerElement\n      if (\n        reflexElement.type === 'number' &&\n        reflexElement.validity &&\n        reflexElement.validity.badInput\n      ) {\n        if (Debug.enabled) console.warn('Reflex aborted: invalid numeric input')\n        return\n      }\n      const options = {}\n      if (\n        args[0] &&\n        typeof args[0] === 'object' &&\n        Object.keys(args[0]).filter(key =>\n          [\n            'attrs',\n            'selectors',\n            'reflexId',\n            'resolveLate',\n            'serializeForm',\n            'suppressLogging',\n            'includeInnerHTML',\n            'includeTextContent'\n          ].includes(key)\n        ).length\n      ) {\n        const opts = args.shift()\n        Object.keys(opts).forEach(o => (options[o] = opts[o]))\n      }\n\n      const reflexData = new ReflexData(\n        options,\n        reflexElement,\n        controllerElement,\n        this.identifier,\n        Schema.reflexPermanent,\n        target,\n        args,\n        url,\n        tabId\n      )\n\n      const reflexId = reflexData.reflexId\n\n      if (!this.isActionCableConnectionOpen())\n        throw 'The ActionCable connection is not open! `this.isActionCableConnectionOpen()` must return true before calling `this.stimulate()`'\n\n      if (!ActionCableTransport.subscriptionActive)\n        throw 'The ActionCable channel subscription for StimulusReflex was rejected.'\n\n      // lifecycle setup\n      controllerElement.reflexController =\n        controllerElement.reflexController || {}\n      controllerElement.reflexData = controllerElement.reflexData || {}\n      controllerElement.reflexError = controllerElement.reflexError || {}\n\n      controllerElement.reflexController[reflexId] = this\n      controllerElement.reflexData[reflexId] = reflexData.valueOf()\n\n      dispatchLifecycleEvent(\n        'before',\n        reflexElement,\n        controllerElement,\n        reflexId\n      )\n\n      setTimeout(() => {\n        const { params } = controllerElement.reflexData[reflexId] || {}\n        const check = reflexElement.attributes[Schema.reflexSerializeForm]\n        if (check) {\n          // not needed after v4 because this is only here for the deprecation warning\n          options['serializeForm'] = check.value !== 'false'\n        }\n\n        const form =\n          reflexElement.closest(reflexData.formSelector) ||\n          document.querySelector(reflexData.formSelector) ||\n          reflexElement.closest('form')\n\n        if (Deprecate.enabled && options['serializeForm'] === undefined && form)\n          console.warn(\n            `Deprecation warning: the next version of StimulusReflex will not serialize forms by default.\\nPlease set ${Schema.reflexSerializeForm}=\\\"true\\\" on your Reflex Controller Element or pass { serializeForm: true } as an option to stimulate.`\n          )\n        const formData =\n          options['serializeForm'] === false\n            ? ''\n            : serializeForm(form, {\n                element: reflexElement\n              })\n\n        controllerElement.reflexData[reflexId] = {\n          ...reflexData.valueOf(),\n          params,\n          formData\n        }\n\n        this.StimulusReflex.subscription.send(\n          controllerElement.reflexData[reflexId]\n        )\n      })\n\n      const promise = registerReflex(reflexData.valueOf())\n\n      Log.request(\n        reflexId,\n        target,\n        args,\n        this.context.scope.identifier,\n        reflexElement,\n        controllerElement\n      )\n\n      return promise\n    },\n\n    // Wraps the call to stimulate for any data-reflex elements.\n    // This is internal and should not be invoked directly.\n    __perform (event) {\n      let element = event.target\n      let reflex\n\n      while (element && !reflex) {\n        reflex = element.getAttribute(Schema.reflex)\n        if (!reflex || !reflex.trim().length) element = element.parentElement\n      }\n\n      const match = attributeValues(reflex).find(\n        reflex => reflex.split('->')[0] === event.type\n      )\n\n      if (match) {\n        event.preventDefault()\n        event.stopPropagation()\n        this.stimulate(match.split('->')[1], element)\n      }\n    }\n  })\n}\n\n// Uniquely identify this browser tab in each Reflex\nconst tabId = uuidv4()\n\nconst useReflex = (controller, options = {}) => {\n  register(controller, options)\n}\n\ndocument.addEventListener('cable-ready:after-dispatch-event', routeReflexEvent)\ndocument.addEventListener('cable-ready:before-inner-html', beforeDOMUpdate)\ndocument.addEventListener('cable-ready:before-morph', beforeDOMUpdate)\ndocument.addEventListener('cable-ready:after-inner-html', afterDOMUpdate)\ndocument.addEventListener('cable-ready:after-morph', afterDOMUpdate)\nwindow.addEventListener('load', setupDeclarativeReflexes)\n\nexport {\n  initialize,\n  register,\n  useReflex\n}\n","export * from './stimulus_reflex'\n\nimport * as StimulusReflex from './stimulus_reflex'\n\nimport Debug from './debug'\nimport Deprecate from './deprecate'\n\nconst global = {\n  ...StimulusReflex,\n  get debug () {\n    return Debug.value\n  },\n  set debug (value) {\n    Debug.set(!!value)\n  },\n  get deprecate () {\n    return Deprecate.value\n  },\n  set deprecate (value) {\n    Deprecate.set(!!value)\n  }\n}\n\nwindow.StimulusReflex = global\n\nexport default global\n"],"names":["defaultSchema","reflexAttribute","reflexPermanentAttribute","reflexRootAttribute","reflexSuppressLoggingAttribute","reflexDatasetAttribute","reflexDatasetAllAttribute","reflexSerializeFormAttribute","reflexFormSelectorAttribute","reflexIncludeInnerHtmlAttribute","reflexIncludeTextContentAttribute","schema","set","application","attribute","Object","defineProperty","this","slice","get","debugging","enabled","disabled","value","debug","reflexes","request","reflexId","target","args","controller","element","controllerElement","reflex","Debug","promise","data","suppressLogging","timestamp","Date","console","log","success","event","halted","detail","selector","payload","morph","stimulusReflex","progress","totalOperations","completedOperations","duration","operation","type","split","join","error","body","deprecationWarnings","deprecate","uuidv4","crypto","window","msCrypto","replace","c","getRandomValues","Uint8Array","toString","serializeForm","form","options","w","formData","FormData","Array","from","e","map","encodeURIComponent","submitButton","querySelector","name","nodeName","push","camelize","uppercaseFirstLetter","$1","toUpperCase","toLowerCase","substr","debounce","callback","delay","timeoutId","clearTimeout","setTimeout","extractReflexName","reflexString","match","emitEvent","document","dispatchEvent","CustomEvent","bubbles","cancelable","jQuery","trigger","elementToXPath","id","ix","siblings","parentNode","childNodes","i","length","sibling","computedPath","tagName","ixInc","nodeType","XPathToElement","xpath","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","XPathToArray","reverse","snapshotList","ORDERED_NODE_SNAPSHOT_TYPE","snapshots","snapshotLength","snapshotItem","multipleInstances","includes","querySelectorAll","collectCheckedOptions","concat","filter","elem","checked","o","attributeValue","values","v","String","trim","attributeValues","extractElementAttributes","attrs","attributes","reduce","memo","attr","selected","tag_name","collectedOptions","getElementsFromTokens","tokens","elements","xPath","forEach","token","Deprecate","warn","extractElementDataset","dataset","Schema","reflexDataset","allDataset","reflexDatasetAll","allTokens","datasetElements","datasetAllElements","datasetAttributes","acc","ele","extractDataAttributes","reflexElementAttributes","elementDataset","datasetAll","elementAttributes","keys","key","isArray","startsWith","isolationMode","invokeLifecycleMethod","stage","reflexElement","reflexData","reflexController","reflexMethodName","specificLifecycleMethodName","specificLifecycleMethod","genericLifecycleMethodName","genericLifecycleMethod","call","reflexError","finalStage","Reflect","deleteProperty","addEventListener","dispatchLifecycleEvent","warned","action","localReflexControllers","app","getAttribute","getControllerForElementAndIdentifier","StimulusReflex","allReflexControllers","controllers","parentElement","findControllerByReflexName","reflexName","find","identifier","received","cableReady","version","CableReady","reflexOperations","operations","splice","some","url","location","href","IsolationMode","xpathController","xpathElement","registerReflex","pendingOperations","piggybackOperations","perform","Promise","resolve","reject","catch","getReflexRoots","list","reflexRoot","selectors","s","closest","setupDeclarativeReflexes","reflexAttributeNames","actions","controllerValue","actionValue","setAttribute","ReflexData","constructor","permanentAttributeName","tabId","_attrs","_reflexId","_selectors","resolveLate","_dataset","innerHTML","includeInnerHtml","textContent","includeTextContent","formSelector","reflexFormSelector","undefined","reflexIncludeInnerHtml","reflexIncludeTextContent","reflexSuppressLogging","valueOf","inner_html","text_content","consumer","params","subscriptionActive","createSubscription","createConsumer","channel","subscription","JSON","stringify","subscriptions","findAll","create","connected","rejected","disconnected","classList","willAttemptReconnect","consumerValue","paramsValue","beforeDOMUpdate","afterDOMUpdate","Log","routeReflexEvent","eventType","nothing","StimulusReflexController","Controller","super","register","initialize","isolate","ActionCableTransport","remove","add","once","observer","MutationObserver","observe","documentElement","attributeFilter","childList","subtree","assign","isActionCableConnectionOpen","connection","isOpen","stimulate","arguments","shift","Node","ELEMENT_NODE","validity","badInput","opts","reflexPermanent","check","reflexSerializeForm","send","context","scope","__perform","preventDefault","stopPropagation","useReflex","global"],"mappings":"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"}