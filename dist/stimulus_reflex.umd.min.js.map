{"version":3,"file":"stimulus_reflex.umd.min.js","sources":["../javascript/schema.js","../javascript/debug.js","../javascript/reflex_store.js","../javascript/log.js","../javascript/deprecate.js","../javascript/utils.js","../javascript/attributes.js","../javascript/isolation_mode.js","../javascript/lifecycle.js","../javascript/controllers.js","../javascript/reflexes.js","../javascript/reflex_data.js","../javascript/transports/action_cable.js","../javascript/callbacks.js","../javascript/stimulus_reflex.js","../javascript/index.js"],"sourcesContent":["const defaultSchema = {\n  reflexAttribute: 'data-reflex',\n  reflexPermanentAttribute: 'data-reflex-permanent',\n  reflexRootAttribute: 'data-reflex-root',\n  reflexSuppressLoggingAttribute: 'data-reflex-suppress-logging',\n  reflexDatasetAttribute: 'data-reflex-dataset',\n  reflexDatasetAllAttribute: 'data-reflex-dataset-all',\n  reflexSerializeFormAttribute: 'data-reflex-serialize-form',\n  reflexFormSelectorAttribute: 'data-reflex-form-selector',\n  reflexIncludeInnerHtmlAttribute: 'data-reflex-include-inner-html',\n  reflexIncludeTextContentAttribute: 'data-reflex-include-text-content'\n}\n\nlet schema = {}\n\nexport { schema, defaultSchema }\n\nexport default {\n  set (application) {\n    schema = { ...defaultSchema, ...application.schema }\n    for (const attribute in schema) {\n      Object.defineProperty(this, attribute.slice(0, -9), {\n        get: () => {\n          return schema[attribute]\n        }\n      })\n    }\n  }\n}\n","let debugging = false\n\nexport default {\n  get enabled () {\n    return debugging\n  },\n  get disabled () {\n    return !debugging\n  },\n  get value () {\n    return debugging\n  },\n  set (value) {\n    debugging = !!value\n  },\n  set debug (value) {\n    debugging = !!value\n  }\n}\n","const reflexes = {}\n\nexport { reflexes }\n","import Debug from './debug'\n\nimport { reflexes } from './reflex_store'\n\nconst request = (\n  reflexId,\n  target,\n  args,\n  controller,\n  element,\n  controllerElement\n) => {\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  reflex.timestamp = new Date()\n  console.log(`\\u2191 stimulus \\u2191 ${target}`, {\n    reflexId,\n    args,\n    controller,\n    element,\n    controllerElement\n  })\n}\n\nconst success = event => {\n  const { detail } = event || {}\n  const { selector, payload } = detail || {}\n  const { reflexId, target, morph } = detail.stimulusReflex || {}\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  const progress =\n    reflex.totalOperations > 1\n      ? ` ${reflex.completedOperations}/${reflex.totalOperations}`\n      : ''\n  const duration = reflex.timestamp\n    ? `in ${new Date() - reflex.timestamp}ms`\n    : 'CLONED'\n  const operation = event.type\n    .split(':')[1]\n    .split('-')\n    .slice(1)\n    .join('_')\n  const output = { reflexId, morph, payload }\n  if (operation !== 'dispatch_event') output.operation = operation\n  console.log(\n    `\\u2193 reflex \\u2193 ${target} \\u2192 ${selector ||\n      '\\u221E'}${progress} ${duration}`,\n    output\n  )\n}\n\nconst halted = event => {\n  const { detail } = event || {}\n  const { reflexId, target, payload } = detail.stimulusReflex || {}\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  const duration = reflex.timestamp\n    ? `in ${new Date() - reflex.timestamp}ms`\n    : 'CLONED'\n  console.log(\n    `\\u2193 reflex \\u2193 ${target} ${duration} %cHALTED`,\n    'color: #ffa500;',\n    { reflexId, payload }\n  )\n}\n\nconst forbidden = event => {\n  const { detail } = event || {}\n  const { reflexId, target, payload } = detail.stimulusReflex || {}\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  const duration = reflex.timestamp\n    ? `in ${new Date() - reflex.timestamp}ms`\n    : 'CLONED'\n  console.log(\n    `\\u2193 reflex \\u2193 ${target} ${duration} %cFORBIDDEN`,\n    'color: #BF40BF;',\n    { reflexId, payload }\n  )\n}\n\nconst error = event => {\n  const { detail } = event || {}\n  const { reflexId, target, payload } = detail.stimulusReflex || {}\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  const duration = reflex.timestamp\n    ? `in ${new Date() - reflex.timestamp}ms`\n    : 'CLONED'\n  console.log(\n    `\\u2193 reflex \\u2193 ${target} ${duration} %cERROR: ${event.detail.body}`,\n    'color: #f00;',\n    { reflexId, payload }\n  )\n}\n\nexport default { request, success, halted, forbidden, error }\n","let deprecationWarnings = true\n\nexport default {\n  get enabled () {\n    return deprecationWarnings\n  },\n  get disabled () {\n    return !deprecationWarnings\n  },\n  get value () {\n    return deprecationWarnings\n  },\n  set (value) {\n    deprecationWarnings = !!value\n  },\n  set deprecate (value) {\n    deprecationWarnings = !!value\n  }\n}\n","// uuid4 function taken from stackoverflow\n// https://stackoverflow.com/a/2117523/554903\n\nconst uuidv4 = () => {\n  const crypto = window.crypto || window.msCrypto\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16)\n  )\n}\n\nconst serializeForm = (form, options = {}) => {\n  if (!form) return ''\n\n  const w = options.w || window\n  const { element } = options\n  const formData = new w.FormData(form)\n  const data = Array.from(formData, e => e.map(encodeURIComponent).join('='))\n  const submitButton = form.querySelector('input[type=submit]')\n  if (\n    element &&\n    element.name &&\n    element.nodeName === 'INPUT' &&\n    element.type === 'submit'\n  ) {\n    data.push(\n      `${encodeURIComponent(element.name)}=${encodeURIComponent(element.value)}`\n    )\n  } else if (submitButton && submitButton.name) {\n    data.push(\n      `${encodeURIComponent(submitButton.name)}=${encodeURIComponent(\n        submitButton.value\n      )}`\n    )\n  }\n  return Array.from(data).join('&')\n}\n\nconst camelize = (value, uppercaseFirstLetter = true) => {\n  if (typeof value !== 'string') return ''\n  value = value\n    .replace(/[\\s_](.)/g, $1 => $1.toUpperCase())\n    .replace(/[\\s_]/g, '')\n    .replace(/^(.)/, $1 => $1.toLowerCase())\n\n  if (uppercaseFirstLetter)\n    value = value.substr(0, 1).toUpperCase() + value.substr(1)\n\n  return value\n}\n\nconst debounce = (callback, delay = 250) => {\n  let timeoutId\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      callback(...args)\n    }, delay)\n  }\n}\n\nconst extractReflexName = reflexString => {\n  const match = reflexString.match(/(?:.*->)?(.*?)(?:Reflex)?#/)\n\n  return match ? match[1] : ''\n}\n\nconst emitEvent = (event, detail) => {\n  document.dispatchEvent(\n    new CustomEvent(event, {\n      bubbles: true,\n      cancelable: false,\n      detail\n    })\n  )\n  if (window.jQuery) window.jQuery(document).trigger(event, detail)\n}\n\n// construct a valid xPath for an element in the DOM\nconst elementToXPath = element => {\n  if (element.id !== '') return \"//*[@id='\" + element.id + \"']\"\n  if (element === document.body) return '/html/body'\n\n  let ix = 0\n  const siblings =\n    element && element.parentNode ? element.parentNode.childNodes : []\n\n  for (var i = 0; i < siblings.length; i++) {\n    const sibling = siblings[i]\n    if (sibling === element) {\n      const computedPath = elementToXPath(element.parentNode)\n      const tagName = element.tagName.toLowerCase()\n      const ixInc = ix + 1\n      return `${computedPath}/${tagName}[${ixInc}]`\n    }\n\n    if (sibling.nodeType === 1 && sibling.tagName === element.tagName) {\n      ix++\n    }\n  }\n}\n\nconst XPathToElement = xpath => {\n  return document.evaluate(\n    xpath,\n    document,\n    null,\n    XPathResult.FIRST_ORDERED_NODE_TYPE,\n    null\n  ).singleNodeValue\n}\n\nconst XPathToArray = (xpath, reverse = false) => {\n  const snapshotList = document.evaluate(\n    xpath,\n    document,\n    null,\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  )\n\n  const snapshots = []\n\n  for (let i = 0; i < snapshotList.snapshotLength; i++) {\n    snapshots.push(snapshotList.snapshotItem(i))\n  }\n\n  return reverse ? snapshots.reverse() : snapshots\n}\n\nexport {\n  uuidv4,\n  serializeForm,\n  camelize,\n  debounce,\n  extractReflexName,\n  emitEvent,\n  elementToXPath,\n  XPathToElement,\n  XPathToArray\n}\n","import Schema from './schema'\nimport Debug from './debug'\nimport Deprecate from './deprecate'\n\nimport { elementToXPath, XPathToArray } from './utils'\n\nconst multipleInstances = element => {\n  if (['checkbox', 'radio'].includes(element.type)) {\n    return (\n      document.querySelectorAll(\n        `input[type=\"${element.type}\"][name=\"${element.name}\"]`\n      ).length > 1\n    )\n  }\n  return false\n}\nconst collectCheckedOptions = element => {\n  return Array.from(element.querySelectorAll('option:checked'))\n    .concat(\n      Array.from(\n        document.querySelectorAll(\n          `input[type=\"${element.type}\"][name=\"${element.name}\"]`\n        )\n      ).filter(elem => elem.checked)\n    )\n    .map(o => o.value)\n}\n\n// Returns a string value for the passed array.\n//\n//   attributeValue(['', 'one', null, 'two', 'three ']) // 'one two three'\n//\nconst attributeValue = (values = []) => {\n  const value = Array.from(new Set(values.filter(v => v && String(v).length).map(v => v.trim()))).join(' ').trim()\n\n  return value.length > 0 ? value : null\n}\n\n// Returns an array for the passed string value by splitting on whitespace.\n//\n//   attributeValues('one two three ') // ['one', 'two', 'three']\n//\nconst attributeValues = value => {\n  if (!value) return []\n  if (!value.length) return []\n  return value.split(' ').filter(v => v.trim().length)\n}\n\n// Extracts attributes from a DOM element.\n//\nconst extractElementAttributes = element => {\n  let attrs = Array.from(element.attributes).reduce((memo, attr) => {\n    memo[attr.name] = attr.value\n    return memo\n  }, {})\n\n  attrs.checked = !!element.checked\n  attrs.selected = !!element.selected\n  attrs.tag_name = element.tagName\n\n  if (element.tagName.match(/select/i) || multipleInstances(element)) {\n    const collectedOptions = collectCheckedOptions(element)\n    attrs.values = collectedOptions\n    attrs.value = collectedOptions.join(',')\n  } else {\n    attrs.value = element.value\n  }\n  return attrs\n}\n\n// Returns an array of elements for the provided tokens.\n// Tokens is an array of space separated string coming from the `data-reflex-dataset`\n// or `data-reflex-dataset-all` attribute.\n//\nconst getElementsFromTokens = (element, tokens) => {\n  if (!tokens || tokens.length === 0) return []\n\n  let elements = [element]\n\n  const xPath = elementToXPath(element)\n\n  tokens.forEach(token => {\n    try {\n      switch (token) {\n        case 'combined':\n          if (Deprecate.enabled)\n            console.warn(\n              \"In the next version of StimulusReflex, the 'combined' option to data-reflex-dataset will become 'ancestors'.\"\n            )\n          elements = [\n            ...elements,\n            ...XPathToArray(`${xPath}/ancestor::*`, true)\n          ]\n          break\n        case 'ancestors':\n          elements = [\n            ...elements,\n            ...XPathToArray(`${xPath}/ancestor::*`, true)\n          ]\n          break\n        case 'parent':\n          elements = [...elements, ...XPathToArray(`${xPath}/parent::*`)]\n          break\n        case 'siblings':\n          elements = [\n            ...elements,\n            ...XPathToArray(\n              `${xPath}/preceding-sibling::*|${xPath}/following-sibling::*`\n            )\n          ]\n          break\n        case 'children':\n          elements = [...elements, ...XPathToArray(`${xPath}/child::*`)]\n          break\n        case 'descendants':\n          elements = [...elements, ...XPathToArray(`${xPath}/descendant::*`)]\n          break\n        default:\n          elements = [...elements, ...document.querySelectorAll(token)]\n      }\n    } catch (error) {\n      if (Debug.enabled) console.error(error)\n    }\n  })\n\n  return elements\n}\n\n// Extracts the dataset of an element and combines it with the data attributes from all specified tokens\n//\nconst extractElementDataset = element => {\n  const dataset = element.attributes[Schema.reflexDataset]\n  const allDataset = element.attributes[Schema.reflexDatasetAll]\n\n  const tokens = (dataset && dataset.value.split(' ')) || []\n  const allTokens = (allDataset && allDataset.value.split(' ')) || []\n\n  const datasetElements = getElementsFromTokens(element, tokens)\n  const datasetAllElements = getElementsFromTokens(element, allTokens)\n\n  const datasetAttributes = datasetElements.reduce((acc, ele) => {\n    return { ...extractDataAttributes(ele), ...acc }\n  }, {})\n\n  const reflexElementAttributes = extractDataAttributes(element)\n\n  const elementDataset = {\n    dataset: { ...reflexElementAttributes, ...datasetAttributes },\n    datasetAll: {}\n  }\n\n  datasetAllElements.forEach(element => {\n    const elementAttributes = extractDataAttributes(element)\n\n    Object.keys(elementAttributes).forEach(key => {\n      const value = elementAttributes[key]\n\n      if (\n        elementDataset.datasetAll[key] &&\n        Array.isArray(elementDataset.datasetAll[key])\n      ) {\n        elementDataset.datasetAll[key].push(value)\n      } else {\n        elementDataset.datasetAll[key] = [value]\n      }\n    })\n  })\n\n  return elementDataset\n}\n\n// Extracts all data attributes from a DOM element.\n//\nconst extractDataAttributes = element => {\n  let attrs = {}\n\n  if (element && element.attributes) {\n    Array.from(element.attributes).forEach(attr => {\n      if (attr.name.startsWith('data-')) {\n        attrs[attr.name] = attr.value\n      }\n    })\n  }\n\n  return attrs\n}\n\nexport {\n  attributeValue,\n  attributeValues,\n  extractElementAttributes,\n  extractElementDataset,\n  extractDataAttributes\n}\n","let isolationMode = false\n\nexport default {\n  get disabled () {\n    return !isolationMode\n  },\n  set (value) {\n    isolationMode = value\n  }\n}\n","import Debug from './debug'\n\nimport { camelize } from './utils'\nimport { reflexes } from './reflex_store'\n\n// Invokes a lifecycle method on a StimulusReflex controller.\n//\n// - stage - the lifecycle stage\n//   * before\n//   * success\n//   * error\n//   * halted\n//   * forbidden\n//   * after\n//   * finalize\n//\n// - reflexElement - the element that triggered the Reflex (not necessarily the StimulusReflex Controller Element)\n// - controllerElement - the element holding the StimulusReflex Controller\n// - reflexId - the UUIDv4 which uniquely identifies the Reflex\n// - payload - the optional \"return value\" from the Reflex method\n//\nconst invokeLifecycleMethod = (\n  stage,\n  reflexElement,\n  controllerElement,\n  reflexId,\n  payload\n) => {\n  if (!controllerElement || !controllerElement.reflexData[reflexId]) return\n\n  const controller = controllerElement.reflexController[reflexId]\n  const reflex = controllerElement.reflexData[reflexId].target\n  const reflexMethodName = reflex.split('#')[1]\n\n  const specificLifecycleMethodName = ['before', 'after', 'finalize'].includes(\n    stage\n  )\n    ? `${stage}${camelize(reflexMethodName)}`\n    : `${camelize(reflexMethodName, false)}${camelize(stage)}`\n  const specificLifecycleMethod = controller[specificLifecycleMethodName]\n\n  const genericLifecycleMethodName = ['before', 'after', 'finalize'].includes(\n    stage\n  )\n    ? `${stage}Reflex`\n    : `reflex${camelize(stage)}`\n  const genericLifecycleMethod = controller[genericLifecycleMethodName]\n\n  if (typeof specificLifecycleMethod === 'function') {\n    specificLifecycleMethod.call(\n      controller,\n      reflexElement,\n      reflex,\n      controllerElement.reflexError[reflexId],\n      reflexId,\n      payload\n    )\n  }\n\n  if (typeof genericLifecycleMethod === 'function') {\n    genericLifecycleMethod.call(\n      controller,\n      reflexElement,\n      reflex,\n      controllerElement.reflexError[reflexId],\n      reflexId,\n      payload\n    )\n  }\n\n  if (reflexes[reflexId] && stage === reflexes[reflexId].finalStage) {\n    Reflect.deleteProperty(controllerElement.reflexController, reflexId)\n    Reflect.deleteProperty(controllerElement.reflexData, reflexId)\n    Reflect.deleteProperty(controllerElement.reflexError, reflexId)\n    // Removing this on a trial basis\n    // 1. Prevents race condition with CR broadcasts\n    // 2. Planning to remove it for v4 as part of queueing refactor\n    // 3. Removing reflexes shouldn't be the responsibility of the lifecycle subsystem\n    // Reflect.deleteProperty(reflexes, reflexId)\n  }\n}\n\ndocument.addEventListener(\n  'stimulus-reflex:before',\n  event =>\n    invokeLifecycleMethod(\n      'before',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:success',\n  event => {\n    invokeLifecycleMethod(\n      'success',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n    dispatchLifecycleEvent(\n      'after',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n  },\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:nothing',\n  event => {\n    dispatchLifecycleEvent(\n      'success',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n  },\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:error',\n  event => {\n    invokeLifecycleMethod(\n      'error',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n    dispatchLifecycleEvent(\n      'after',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n  },\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:halted',\n  event =>\n    invokeLifecycleMethod(\n      'halted',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:forbidden',\n  event =>\n    invokeLifecycleMethod(\n      'forbidden',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:after',\n  event =>\n    invokeLifecycleMethod(\n      'after',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:finalize',\n  event =>\n    invokeLifecycleMethod(\n      'finalize',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\n// Dispatches a lifecycle event on document\n//\n// - stage - the lifecycle stage\n//   * before\n//   * success\n//   * error\n//   * halted\n//   * forbidden\n//   * after\n//   * finalize\n//\n// - reflexElement - the element that triggered the Reflex (not necessarily the StimulusReflex Controller Element)\n//\n// - controllerElement - the element holding the StimulusReflex Controller\n//\n// - reflexId - the UUIDv4 which uniquely identifies the Reflex\n//\n// - payload - optional Reflex return value\n//\nconst dispatchLifecycleEvent = (\n  stage,\n  reflexElement,\n  controllerElement,\n  reflexId,\n  payload\n) => {\n  if (!controllerElement) {\n    if (Debug.enabled && !reflexes[reflexId].warned) {\n      console.warn(\n        `StimulusReflex was not able execute callbacks or emit events for \"${stage}\" or later life-cycle stages for this Reflex. The StimulusReflex Controller Element is no longer present in the DOM. Could you move the StimulusReflex Controller to an element higher in your DOM?`\n      )\n      reflexes[reflexId].warned = true\n    }\n    return\n  }\n\n  if (\n    !controllerElement.reflexController ||\n    (controllerElement.reflexController &&\n      !controllerElement.reflexController[reflexId])\n  ) {\n    if (Debug.enabled && !reflexes[reflexId].warned) {\n      console.warn(\n        `StimulusReflex detected that the StimulusReflex Controller responsible for this Reflex has been replaced with a new instance. Callbacks and events for \"${stage}\" or later life-cycle stages cannot be executed.`\n      )\n      reflexes[reflexId].warned = true\n    }\n    return\n  }\n\n  const { target } = controllerElement.reflexData[reflexId] || {}\n  const controller = controllerElement.reflexController[reflexId] || {}\n  const event = `stimulus-reflex:${stage}`\n  const action = `${event}:${target.split('#')[1]}`\n  const detail = {\n    reflex: target,\n    controller,\n    reflexId,\n    element: reflexElement,\n    payload\n  }\n  const options = { bubbles: true, cancelable: false, detail }\n\n  controllerElement.dispatchEvent(new CustomEvent(event, options))\n  controllerElement.dispatchEvent(new CustomEvent(action, options))\n\n  if (window.jQuery) {\n    window.jQuery(controllerElement).trigger(event, detail)\n    window.jQuery(controllerElement).trigger(action, detail)\n  }\n}\n\nexport { dispatchLifecycleEvent }\n","import Schema from './schema'\n\nimport { attributeValues } from './attributes'\nimport { extractReflexName } from './utils'\n\n// Returns StimulusReflex controllers local to the passed element based on the data-controller attribute.\n//\nconst localReflexControllers = (app, element) => {\n  return attributeValues(element.getAttribute(Schema.controller)).reduce(\n    (memo, name) => {\n      const controller = app.getControllerForElementAndIdentifier(element, name)\n      if (controller && controller.StimulusReflex) memo.push(controller)\n      return memo\n    },\n    []\n  )\n}\n\n// Returns all StimulusReflex controllers for the passed element.\n// Traverses DOM ancestors starting with element.\n//\nconst allReflexControllers = (app, element) => {\n  let controllers = []\n  while (element) {\n    controllers = controllers.concat(localReflexControllers(app, element))\n    element = element.parentElement\n  }\n  return controllers\n}\n\n// Given a reflex string such as 'click->TestReflex#create' and a list of\n// controllers. It will find the matching controller based on the controller's\n// identifier. e.g. Given these controller identifiers ['foo', 'bar', 'test'],\n// it would select the 'test' controller.\nconst findControllerByReflexName = (reflexName, controllers) => {\n  const controller = controllers.find(controller => {\n    if (!controller.identifier) return\n\n    return (\n      extractReflexName(reflexName)\n        .replace(/([a-z0–9])([A-Z])/g, '$1-$2')\n        .replace(/(::)/g, '--')\n        .toLowerCase() === controller.identifier\n    )\n  })\n\n  return controller || controllers[0]\n}\n\nexport { allReflexControllers, findControllerByReflexName }\n","import CableReady from 'cable_ready'\n\nimport Debug from './debug'\nimport Schema from './schema'\nimport IsolationMode from './isolation_mode'\n\nimport { reflexes } from './reflex_store'\nimport { dispatchLifecycleEvent } from './lifecycle'\nimport { XPathToElement, debounce, emitEvent } from './utils'\nimport { allReflexControllers, findControllerByReflexName } from './controllers'\nimport { attributeValue, attributeValues } from './attributes'\n\nconst received = data => {\n  if (!data.cableReady) return\n\n  if (data.version.replace('.pre', '-pre') !== CableReady.version) {\n    if (Debug.enabled)\n      console.error(\n        `Reflex failed due to cable_ready gem/NPM package version mismatch. Package versions must match exactly.\\nNote that if you are using pre-release builds, gems use the \"x.y.z.preN\" version format, while NPM packages use \"x.y.z-preN\".\\n\\ncable_ready gem: ${data.version}\\ncable_ready NPM: ${CableReady.version}`\n      )\n    return\n  }\n\n  let reflexOperations = []\n\n  for (let i = data.operations.length - 1; i >= 0; i--) {\n    if (data.operations[i].stimulusReflex) {\n      reflexOperations.push(data.operations[i])\n      data.operations.splice(i, 1)\n    }\n  }\n\n  if (\n    reflexOperations.some(\n      operation => operation.stimulusReflex.url !== location.href\n    )\n  ) {\n    return\n  }\n\n  let reflexData\n\n  if (reflexOperations.length) {\n    reflexData = reflexOperations[0].stimulusReflex\n    reflexData.payload = reflexOperations[0].payload\n  }\n\n  if (reflexData) {\n    const { reflexId, payload } = reflexData\n\n    if (!reflexes[reflexId] && IsolationMode.disabled) {\n      const controllerElement = XPathToElement(reflexData.xpathController)\n      const reflexElement = XPathToElement(reflexData.xpathElement)\n\n      controllerElement.reflexController =\n        controllerElement.reflexController || {}\n      controllerElement.reflexData = controllerElement.reflexData || {}\n      controllerElement.reflexError = controllerElement.reflexError || {}\n\n      controllerElement.reflexController[\n        reflexId\n      ] = reflexes.app.getControllerForElementAndIdentifier(\n        controllerElement,\n        reflexData.reflexController\n      )\n\n      controllerElement.reflexData[reflexId] = reflexData\n\n      dispatchLifecycleEvent(\n        'before',\n        reflexElement,\n        controllerElement,\n        reflexId,\n        payload\n      )\n\n      registerReflex(reflexData)\n    }\n\n    if (reflexes[reflexId]) {\n      reflexes[reflexId].totalOperations = reflexOperations.length\n      reflexes[reflexId].pendingOperations = reflexOperations.length\n      reflexes[reflexId].completedOperations = 0\n      reflexes[reflexId].piggybackOperations = data.operations\n      CableReady.perform(reflexOperations)\n    }\n  } else {\n    if (data.operations.length && reflexes[data.operations[0].reflexId]) {\n      CableReady.perform(data.operations)\n    }\n  }\n}\n\nconst registerReflex = data => {\n  const { reflexId } = data\n  reflexes[reflexId] = { finalStage: 'finalize' }\n\n  const promise = new Promise((resolve, reject) => {\n    reflexes[reflexId].promise = {\n      resolve,\n      reject,\n      data\n    }\n  })\n\n  promise.reflexId = reflexId\n\n  if (Debug.enabled) promise.catch(() => {})\n\n  return promise\n}\n\n// compute the DOM element(s) which will be the morph root\n// use the data-reflex-root attribute on the reflex or the controller\n// optional value is a CSS selector(s); comma-separated list\n// order of preference is data-reflex, data-controller, document body (default)\nconst getReflexRoots = element => {\n  let list = []\n  while (list.length === 0 && element) {\n    let reflexRoot = element.getAttribute(Schema.reflexRoot)\n    if (reflexRoot) {\n      if (reflexRoot.length === 0 && element.id) reflexRoot = `#${element.id}`\n      const selectors = reflexRoot.split(',').filter(s => s.trim().length)\n      if (Debug.enabled && selectors.length === 0) {\n        console.error(\n          `No value found for ${Schema.reflexRoot}. Add an #id to the element or provide a value for ${Schema.reflexRoot}.`,\n          element\n        )\n      }\n      list = list.concat(selectors.filter(s => document.querySelector(s)))\n    }\n    element = element.parentElement\n      ? element.parentElement.closest(`[${Schema.reflexRoot}]`)\n      : null\n  }\n  return list\n}\n\n// Sets up declarative reflex behavior for a single element\n//\nconst setupDeclarativeReflexesForElement = (element) => {\n  const controllerAttribute = element.getAttribute(Schema.controller)\n  const controllers = attributeValues(controllerAttribute)\n\n  const reflexAttribute = element.getAttribute(Schema.reflex)\n  const reflexAttributeNames = attributeValues(reflexAttribute)\n\n  const actionAttribute = element.getAttribute(Schema.action)\n  const actions = attributeValues(actionAttribute).filter(action => !action.includes(\"#__perform\"))\n\n  reflexAttributeNames.forEach(reflexName => {\n    const controller = findControllerByReflexName(\n      reflexName,\n      allReflexControllers(reflexes.app, element)\n    )\n    const controllerName = controller ? controller.identifier : 'stimulus-reflex'\n\n    actions.push(`${reflexName.split('->')[0]}->${controllerName}#__perform`)\n    controllers.push('stimulus-reflex')\n  })\n\n  const controllerValue = attributeValue(controllers)\n  const actionValue = attributeValue(actions)\n\n  if (controllerValue && element.getAttribute(Schema.controller) != controllerValue) {\n    element.setAttribute(Schema.controller, controllerValue)\n  }\n\n  if (actionValue && element.getAttribute(Schema.action) != actionValue) {\n    element.setAttribute(Schema.action, actionValue)\n  }\n}\n\n// Sets up declarative reflex behavior.\n// Any elements that define data-reflex will automatically be wired up with the default StimulusReflexController.\n//\nconst setupDeclarativeReflexes = debounce(() => {\n  const reflexElements = document.querySelectorAll(`[${Schema.reflex}]`)\n  reflexElements.forEach(element => setupDeclarativeReflexesForElement(element))\n  emitEvent('stimulus-reflex:ready')\n}, 20)\n\nexport { received, registerReflex, getReflexRoots, setupDeclarativeReflexes, setupDeclarativeReflexesForElement }\n","import Schema from './schema'\n\nimport { extractElementAttributes, extractElementDataset } from './attributes'\nimport { getReflexRoots } from './reflexes'\nimport { uuidv4 } from './utils'\nimport { elementToXPath } from './utils'\n\nimport packageInfo from '../package.json'\n\nexport default class ReflexData {\n  constructor (\n    options,\n    reflexElement,\n    controllerElement,\n    reflexController,\n    permanentAttributeName,\n    target,\n    args,\n    url,\n    tabId\n  ) {\n    this.options = options\n    this.reflexElement = reflexElement\n    this.controllerElement = controllerElement\n    this.reflexController = reflexController\n    this.permanentAttributeName = permanentAttributeName\n    this.target = target\n    this.args = args\n    this.url = url\n    this.tabId = tabId\n  }\n\n  get attrs () {\n    this._attrs =\n      this._attrs ||\n      this.options['attrs'] ||\n      extractElementAttributes(this.reflexElement)\n\n    return this._attrs\n  }\n\n  get reflexId () {\n    this._reflexId = this._reflexId || this.options['reflexId'] || uuidv4()\n    return this._reflexId\n  }\n\n  get selectors () {\n    this._selectors =\n      this._selectors ||\n      this.options['selectors'] ||\n      getReflexRoots(this.reflexElement)\n\n    return typeof this._selectors === 'string'\n      ? [this._selectors]\n      : this._selectors\n  }\n\n  get resolveLate () {\n    return this.options['resolveLate'] || false\n  }\n\n  get dataset () {\n    this._dataset = this._dataset || extractElementDataset(this.reflexElement)\n    return this._dataset\n  }\n\n  get innerHTML () {\n    return this.includeInnerHtml ? this.reflexElement.innerHTML : ''\n  }\n\n  get textContent () {\n    return this.includeTextContent ? this.reflexElement.textContent : ''\n  }\n\n  get xpathController () {\n    return elementToXPath(this.controllerElement)\n  }\n\n  get xpathElement () {\n    return elementToXPath(this.reflexElement)\n  }\n\n  get formSelector () {\n    const attr = this.reflexElement.attributes[Schema.reflexFormSelector]\n      ? this.reflexElement.attributes[Schema.reflexFormSelector].value\n      : undefined\n    return this.options['formSelector'] || attr\n  }\n\n  get includeInnerHtml () {\n    const attr =\n      this.reflexElement.attributes[Schema.reflexIncludeInnerHtml] || false\n    return this.options['includeInnerHTML'] || attr\n      ? attr.value !== 'false'\n      : false\n  }\n\n  get includeTextContent () {\n    const attr =\n      this.reflexElement.attributes[Schema.reflexIncludeTextContent] || false\n    return this.options['includeTextContent'] || attr\n      ? attr.value !== 'false'\n      : false\n  }\n\n  get suppressLogging () {\n    return (\n      this.options['suppressLogging'] ||\n      this.reflexElement.attributes[Schema.reflexSuppressLogging] ||\n      false\n    )\n  }\n\n  valueOf () {\n    return {\n      attrs: this.attrs,\n      dataset: this.dataset,\n      selectors: this.selectors,\n      reflexId: this.reflexId,\n      resolveLate: this.resolveLate,\n      suppressLogging: this.suppressLogging,\n      xpathController: this.xpathController,\n      xpathElement: this.xpathElement,\n      inner_html: this.innerHTML,\n      text_content: this.textContent,\n      formSelector: this.formSelector,\n      reflexController: this.reflexController,\n      permanentAttributeName: this.permanentAttributeName,\n      target: this.target,\n      args: this.args,\n      url: this.url,\n      tabId: this.tabId,\n      version: packageInfo.version\n    }\n  }\n}\n","import { createConsumer } from '@rails/actioncable'\nimport { received } from '../reflexes'\nimport { emitEvent } from '../utils'\nimport Deprecate from '../deprecate'\n\nlet consumer\nlet params\nlet subscription\nlet active\nlet queue = []\n\nconst initialize = (consumerValue, paramsValue) => {\n  consumer = consumerValue\n  params = paramsValue\n  document.addEventListener('DOMContentLoaded', () => {\n    active = false\n    connectionStatusClass()\n    if (Deprecate.enabled && consumer)\n      console.warn(\n        \"Deprecation warning: the next version of StimulusReflex will obtain a reference to consumer via the Stimulus application object.\\nPlease add 'application.consumer = consumer' to your index.js after your Stimulus application has been established, and remove the consumer key from your StimulusReflex initialize() options object.\"\n      )\n  })\n  document.addEventListener('turbolinks:load', connectionStatusClass)\n  document.addEventListener('turbo:load', connectionStatusClass)\n}\n\nconst subscribe = controller => {\n  if (subscription) return\n  consumer = consumer || controller.application.consumer || createConsumer()\n  const { channel } = controller.StimulusReflex\n  const request = { channel, ...params }\n  const identifier = JSON.stringify(request)\n\n  subscription =\n    consumer.subscriptions.findAll(identifier)[0] ||\n    consumer.subscriptions.create(request, {\n      received,\n      connected,\n      rejected,\n      disconnected\n    })\n}\n\nconst connected = () => {\n  active = true\n  connectionStatusClass()\n  emitEvent('stimulus-reflex:connected')\n  emitEvent('stimulus-reflex:action-cable:connected')\n\n  queue.forEach(reflex => subscription.send(reflex))\n  queue = []\n}\n\nconst rejected = () => {\n  active = false\n  connectionStatusClass()\n  emitEvent('stimulus-reflex:rejected')\n  emitEvent('stimulus-reflex:action-cable:rejected')\n  if (Debug.enabled) console.warn('Channel subscription was rejected.')\n}\n\nconst disconnected = willAttemptReconnect => {\n  active = false\n  connectionStatusClass()\n  emitEvent('stimulus-reflex:disconnected', willAttemptReconnect)\n  emitEvent('stimulus-reflex:action-cable:disconnected', willAttemptReconnect)\n}\n\nconst enqueueReflex = (element, id) => {\n  const reflex = element.reflexData[id]\n  active ? subscription.send(reflex) : queue.push(reflex)\n}\n\nconst connectionStatusClass = () => {\n  const list = document.body.classList\n  if (\n    !(\n      list.contains('stimulus-reflex-connected') ||\n      list.contains('stimulus-reflex-disconnected')\n    )\n  ) {\n    list.add(\n      active ? 'stimulus-reflex-connected' : 'stimulus-reflex-disconnected'\n    )\n    return\n  }\n  if (active) {\n    list.replace('stimulus-reflex-disconnected', 'stimulus-reflex-connected')\n  } else {\n    list.replace('stimulus-reflex-connected', 'stimulus-reflex-disconnected')\n  }\n}\n\nexport default {\n  subscribe,\n  enqueueReflex,\n  initialize\n}\n","import CableReady from 'cable_ready'\n\nimport Log from './log'\n\nimport { reflexes } from './reflex_store'\nimport { dispatchLifecycleEvent } from './lifecycle'\nimport { XPathToElement } from './utils'\n\nconst beforeDOMUpdate = event => {\n  const { stimulusReflex, payload } = event.detail || {}\n  if (!stimulusReflex) return\n  const { reflexId, xpathElement, xpathController } = stimulusReflex\n  const controllerElement = XPathToElement(xpathController)\n  const reflexElement = XPathToElement(xpathElement)\n  const reflex = reflexes[reflexId]\n  const { promise } = reflex\n\n  reflex.pendingOperations--\n\n  if (reflex.pendingOperations > 0) return\n\n  if (!stimulusReflex.resolveLate)\n    setTimeout(() =>\n      promise.resolve({\n        element: reflexElement,\n        event,\n        data: promise.data,\n        payload,\n        reflexId,\n        toString: () => ''\n      })\n    )\n\n  setTimeout(() =>\n    dispatchLifecycleEvent(\n      'success',\n      reflexElement,\n      controllerElement,\n      reflexId,\n      payload\n    )\n  )\n}\n\nconst afterDOMUpdate = event => {\n  const { stimulusReflex, payload } = event.detail || {}\n  if (!stimulusReflex) return\n  const { reflexId, xpathElement, xpathController } = stimulusReflex\n  const controllerElement = XPathToElement(xpathController)\n  const reflexElement = XPathToElement(xpathElement)\n  const reflex = reflexes[reflexId]\n  const { promise } = reflex\n\n  reflex.completedOperations++\n\n  Log.success(event, false)\n\n  if (reflex.completedOperations < reflex.totalOperations) return\n\n  if (stimulusReflex.resolveLate)\n    setTimeout(() =>\n      promise.resolve({\n        element: reflexElement,\n        event,\n        data: promise.data,\n        payload,\n        reflexId,\n        toString: () => ''\n      })\n    )\n\n  setTimeout(() =>\n    dispatchLifecycleEvent(\n      'finalize',\n      reflexElement,\n      controllerElement,\n      reflexId,\n      payload\n    )\n  )\n\n  if (reflex.piggybackOperations.length)\n    CableReady.perform(reflex.piggybackOperations)\n}\n\nconst routeReflexEvent = event => {\n  const { stimulusReflex, payload, name, body } = event.detail || {}\n  const eventType = name.split('-')[2]\n\n  const eventTypes = {\n    nothing: nothing,\n    halted: halted,\n    forbidden: forbidden,\n    error: error\n  }\n\n  if (!stimulusReflex || !Object.keys(eventTypes).includes(eventType)) return\n\n  const { reflexId, xpathElement, xpathController } = stimulusReflex\n  const reflexElement = XPathToElement(xpathElement)\n  const controllerElement = XPathToElement(xpathController)\n  const reflex = reflexes[reflexId]\n  const { promise } = reflex\n\n  if (controllerElement) {\n    controllerElement.reflexError = controllerElement.reflexError || {}\n    if (eventType === 'error') controllerElement.reflexError[reflexId] = body\n  }\n\n  eventTypes[eventType](event, payload, promise, reflex, reflexElement)\n\n  setTimeout(() =>\n    dispatchLifecycleEvent(\n      eventType,\n      reflexElement,\n      controllerElement,\n      reflexId,\n      payload\n    )\n  )\n\n  if (reflex.piggybackOperations.length)\n    CableReady.perform(reflex.piggybackOperations)\n}\n\nconst nothing = (event, payload, promise, reflex, reflexElement) => {\n  reflex.finalStage = 'after'\n\n  Log.success(event)\n\n  setTimeout(() =>\n    promise.resolve({\n      data: promise.data,\n      element: reflexElement,\n      event,\n      payload,\n      reflexId: promise.data.reflexId,\n      toString: () => ''\n    })\n  )\n}\n\nconst halted = (event, payload, promise, reflex, reflexElement) => {\n  reflex.finalStage = 'halted'\n\n  Log.halted(event)\n\n  setTimeout(() =>\n    promise.resolve({\n      data: promise.data,\n      element: reflexElement,\n      event,\n      payload,\n      reflexId: promise.data.reflexId,\n      toString: () => ''\n    })\n  )\n}\n\nconst forbidden = (event, payload, promise, reflex, reflexElement) => {\n  reflex.finalStage = 'forbidden'\n\n  Log.forbidden(event)\n\n  setTimeout(() =>\n    promise.resolve({\n      data: promise.data,\n      element: reflexElement,\n      event,\n      payload,\n      reflexId: promise.data.reflexId,\n      toString: () => ''\n    })\n  )\n}\n\nconst error = (event, payload, promise, reflex, reflexElement) => {\n  reflex.finalStage = 'after'\n\n  Log.error(event)\n\n  setTimeout(() =>\n    promise.reject({\n      data: promise.data,\n      element: reflexElement,\n      event,\n      payload,\n      reflexId: promise.data.reflexId,\n      error: event.detail.body,\n      toString: () => event.detail.body\n    })\n  )\n}\n\nexport { beforeDOMUpdate, afterDOMUpdate, routeReflexEvent }\n","import { Controller } from '@hotwired/stimulus'\n\nimport Schema from './schema'\nimport Log from './log'\nimport Debug from './debug'\nimport Deprecate from './deprecate'\nimport ReflexData from './reflex_data'\nimport IsolationMode from './isolation_mode'\nimport ActionCableTransport from './transports/action_cable'\n\nimport { dispatchLifecycleEvent } from './lifecycle'\nimport { uuidv4, serializeForm } from './utils'\nimport { beforeDOMUpdate, afterDOMUpdate, routeReflexEvent } from './callbacks'\nimport { registerReflex, setupDeclarativeReflexes, setupDeclarativeReflexesForElement } from './reflexes'\nimport { reflexes } from './reflex_store'\nimport { attributeValues } from './attributes'\n\n// Default StimulusReflexController that is implicitly wired up as data-controller for any DOM elements\n// that have configured data-reflex. Note that this default can be overridden when initializing the application.\n// i.e. StimulusReflex.initialize(myStimulusApplication, MyCustomDefaultController);\n//\nclass StimulusReflexController extends Controller {\n  constructor (...args) {\n    super(...args)\n    register(this)\n  }\n}\n\n// Initializes StimulusReflex by registering the default Stimulus controller with the passed Stimulus application.\n//\n// - application  - the Stimulus application\n// - options\n//   * controller - [optional] the default StimulusReflexController\n//   * consumer   - [optional] the ActionCable consumer\n//   * debug      - [false] log all Reflexes to the console\n//   * params     - [{}] key/value parameters to send during channel subscription\n//   * isolate    - [false] restrict Reflex playback to the tab which initiated it\n//   * deprecate  - [true] show warnings regarding upcoming changes to the library\n//\nconst initialize = (\n  application,\n  { controller, consumer, debug, params, isolate, deprecate } = {}\n) => {\n  ActionCableTransport.initialize(consumer, params)\n  document.addEventListener(\n    'DOMContentLoaded',\n    () => {\n      if (Deprecate.enabled && IsolationMode.disabled)\n        console.warn(\n          'Deprecation warning: the next version of StimulusReflex will standardize isolation mode, and the isolate option will be removed.\\nPlease update your applications to assume that every tab will be isolated.'\n        )\n    },\n    { once: true }\n  )\n  IsolationMode.set(!!isolate)\n  reflexes.app = application\n  Schema.set(application)\n  reflexes.app.register(\n    'stimulus-reflex',\n    controller || StimulusReflexController\n  )\n  Debug.set(!!debug)\n  if (typeof deprecate !== 'undefined') Deprecate.set(deprecate)\n  const observer = new MutationObserver(setupDeclarativeReflexes)\n  observer.observe(document.documentElement, {\n    attributeFilter: [Schema.reflex, Schema.action],\n    childList: true,\n    subtree: true\n  })\n}\n\n// Registers a Stimulus controller and extends it with StimulusReflex behavior\n//\n// controller - the Stimulus controller\n// options - [optional] configuration\n//\nconst register = (controller, options = {}) => {\n  const channel = 'StimulusReflex::Channel'\n  controller.StimulusReflex = { ...options, channel }\n  ActionCableTransport.subscribe(controller)\n  Object.assign(controller, {\n    // Invokes a server side reflex method.\n    //\n    // - target - the reflex target (full name of the server side reflex) i.e. 'ReflexClassName#method'\n    // - reflexElement - [optional] the element that triggered the reflex, defaults to this.element\n    // - options - [optional] an object that contains at least one of attrs, reflexId, selectors, resolveLate, serializeForm\n    // - *args - remaining arguments are forwarded to the server side reflex method\n    //\n    stimulate () {\n      const url = location.href\n      const args = Array.from(arguments)\n      const target = args.shift() || 'StimulusReflex::Reflex#default_reflex'\n      const controllerElement = this.element\n      const reflexElement =\n        args[0] && args[0].nodeType === Node.ELEMENT_NODE\n          ? args.shift()\n          : controllerElement\n      if (\n        reflexElement.type === 'number' &&\n        reflexElement.validity &&\n        reflexElement.validity.badInput\n      ) {\n        if (Debug.enabled) console.warn('Reflex aborted: invalid numeric input')\n        return\n      }\n      const options = {}\n      if (\n        args[0] &&\n        typeof args[0] === 'object' &&\n        Object.keys(args[0]).filter(key =>\n          [\n            'attrs',\n            'selectors',\n            'reflexId',\n            'resolveLate',\n            'serializeForm',\n            'suppressLogging',\n            'includeInnerHTML',\n            'includeTextContent'\n          ].includes(key)\n        ).length\n      ) {\n        const opts = args.shift()\n        Object.keys(opts).forEach(o => (options[o] = opts[o]))\n      }\n\n      const reflexData = new ReflexData(\n        options,\n        reflexElement,\n        controllerElement,\n        this.identifier,\n        Schema.reflexPermanent,\n        target,\n        args,\n        url,\n        tabId\n      )\n\n      const reflexId = reflexData.reflexId\n\n      // lifecycle setup\n      controllerElement.reflexController =\n        controllerElement.reflexController || {}\n      controllerElement.reflexData = controllerElement.reflexData || {}\n      controllerElement.reflexError = controllerElement.reflexError || {}\n\n      controllerElement.reflexController[reflexId] = this\n      controllerElement.reflexData[reflexId] = reflexData.valueOf()\n\n      dispatchLifecycleEvent(\n        'before',\n        reflexElement,\n        controllerElement,\n        reflexId\n      )\n\n      setTimeout(() => {\n        const { params } = controllerElement.reflexData[reflexId] || {}\n        const check = reflexElement.attributes[Schema.reflexSerializeForm]\n        if (check) {\n          // not needed after v4 because this is only here for the deprecation warning\n          options['serializeForm'] = check.value !== 'false'\n        }\n\n        const form =\n          reflexElement.closest(reflexData.formSelector) ||\n          document.querySelector(reflexData.formSelector) ||\n          reflexElement.closest('form')\n\n        if (Deprecate.enabled && options['serializeForm'] === undefined && form)\n          console.warn(\n            `Deprecation warning: the next version of StimulusReflex will not serialize forms by default.\\nPlease set ${Schema.reflexSerializeForm}=\\\"true\\\" on your Reflex Controller Element or pass { serializeForm: true } as an option to stimulate.`\n          )\n        const formData =\n          options['serializeForm'] === false\n            ? ''\n            : serializeForm(form, {\n                element: reflexElement\n              })\n\n        controllerElement.reflexData[reflexId] = {\n          ...reflexData.valueOf(),\n          params,\n          formData\n        }\n\n        ActionCableTransport.enqueueReflex(controllerElement, reflexId)\n      })\n\n      const promise = registerReflex(reflexData.valueOf())\n\n      Log.request(\n        reflexId,\n        target,\n        args,\n        this.context.scope.identifier,\n        reflexElement,\n        controllerElement\n      )\n\n      return promise\n    },\n\n    // Wraps the call to stimulate for any data-reflex elements.\n    // This is internal and should not be invoked directly.\n    __perform (event) {\n      let element = event.target\n      let reflex\n\n      while (element && !reflex) {\n        reflex = element.getAttribute(Schema.reflex)\n        if (!reflex || !reflex.trim().length) element = element.parentElement\n      }\n\n      const match = attributeValues(reflex).find(\n        reflex => reflex.split('->')[0] === event.type\n      )\n\n      if (match) {\n        event.preventDefault()\n        event.stopPropagation()\n        this.stimulate(match.split('->')[1], element)\n      }\n    }\n  })\n\n  setupDeclarativeReflexesForElement(controller.element)\n}\n\n// Uniquely identify this browser tab in each Reflex\nconst tabId = uuidv4()\n\nconst useReflex = (controller, options = {}) => {\n  register(controller, options)\n}\n\ndocument.addEventListener('cable-ready:after-dispatch-event', routeReflexEvent)\ndocument.addEventListener('cable-ready:before-inner-html', beforeDOMUpdate)\ndocument.addEventListener('cable-ready:before-morph', beforeDOMUpdate)\ndocument.addEventListener('cable-ready:after-inner-html', afterDOMUpdate)\ndocument.addEventListener('cable-ready:after-morph', afterDOMUpdate)\ndocument.addEventListener('readystatechange', () => {\n  if (document.readyState === 'complete') {\n    setupDeclarativeReflexes()\n  }\n})\n\nexport { initialize, register, useReflex, setupDeclarativeReflexes }\n","export * from './stimulus_reflex'\n\nimport * as StimulusReflex from './stimulus_reflex'\n\nimport Debug from './debug'\nimport Deprecate from './deprecate'\n\nimport packageInfo from '../package.json'\n\nconst global = {\n  version: packageInfo.version,\n  ...StimulusReflex,\n  get debug () {\n    return Debug.value\n  },\n  set debug (value) {\n    Debug.set(!!value)\n  },\n  get deprecate () {\n    return Deprecate.value\n  },\n  set deprecate (value) {\n    Deprecate.set(!!value)\n  }\n}\n\nwindow.StimulusReflex = global\n\nexport default global\n"],"names":["defaultSchema","reflexAttribute","reflexPermanentAttribute","reflexRootAttribute","reflexSuppressLoggingAttribute","reflexDatasetAttribute","reflexDatasetAllAttribute","reflexSerializeFormAttribute","reflexFormSelectorAttribute","reflexIncludeInnerHtmlAttribute","reflexIncludeTextContentAttribute","schema","Schema","set","application","attribute","Object","defineProperty","this","slice","get","debugging","Debug$1","enabled","disabled","value","debug","reflexes","request","reflexId","target","args","controller","element","controllerElement","reflex","Debug","promise","data","suppressLogging","timestamp","Date","console","log","success","event","detail","selector","payload","morph","stimulusReflex","progress","totalOperations","completedOperations","duration","operation","type","split","join","output","halted","forbidden","error","body","Log","deprecationWarnings","Deprecate","deprecate","uuidv4","crypto","window","msCrypto","replace","c","getRandomValues","Uint8Array","toString","serializeForm","form","options","w","formData","FormData","Array","from","e","map","encodeURIComponent","submitButton","querySelector","name","nodeName","push","camelize","uppercaseFirstLetter","$1","toUpperCase","toLowerCase","substr","debounce","callback","delay","timeoutId","clearTimeout","setTimeout","extractReflexName","reflexString","match","emitEvent","document","dispatchEvent","CustomEvent","bubbles","cancelable","jQuery","trigger","elementToXPath","id","ix","siblings","parentNode","childNodes","i","length","sibling","computedPath","tagName","ixInc","nodeType","XPathToElement","xpath","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","XPathToArray","reverse","snapshotList","ORDERED_NODE_SNAPSHOT_TYPE","snapshots","snapshotLength","snapshotItem","multipleInstances","includes","querySelectorAll","collectCheckedOptions","concat","filter","elem","checked","o","attributeValue","values","Set","v","String","trim","attributeValues","extractElementAttributes","attrs","attributes","reduce","memo","attr","selected","tag_name","collectedOptions","getElementsFromTokens","tokens","elements","xPath","forEach","token","warn","extractElementDataset","dataset","reflexDataset","allDataset","reflexDatasetAll","allTokens","datasetElements","datasetAllElements","datasetAttributes","acc","ele","extractDataAttributes","reflexElementAttributes","elementDataset","datasetAll","elementAttributes","keys","key","isArray","startsWith","isolationMode","IsolationMode","invokeLifecycleMethod","stage","reflexElement","reflexData","reflexController","reflexMethodName","specificLifecycleMethodName","specificLifecycleMethod","genericLifecycleMethodName","genericLifecycleMethod","call","reflexError","finalStage","Reflect","deleteProperty","addEventListener","dispatchLifecycleEvent","warned","action","localReflexControllers","app","getAttribute","getControllerForElementAndIdentifier","StimulusReflex","allReflexControllers","controllers","parentElement","findControllerByReflexName","reflexName","find","identifier","received","cableReady","version","CableReady","reflexOperations","operations","splice","some","url","location","href","xpathController","xpathElement","registerReflex","pendingOperations","piggybackOperations","perform","Promise","resolve","reject","catch","getReflexRoots","list","reflexRoot","selectors","s","closest","setupDeclarativeReflexesForElement","controllerAttribute","reflexAttributeNames","actionAttribute","actions","controllerName","controllerValue","actionValue","setAttribute","setupDeclarativeReflexes","reflexElements","ReflexData","constructor","permanentAttributeName","tabId","_attrs","_reflexId","_selectors","resolveLate","_dataset","innerHTML","includeInnerHtml","textContent","includeTextContent","formSelector","reflexFormSelector","undefined","reflexIncludeInnerHtml","reflexIncludeTextContent","reflexSuppressLogging","valueOf","inner_html","text_content","packageInfo","consumer","params","subscription","active","queue","initialize","consumerValue","paramsValue","connectionStatusClass","subscribe","createConsumer","channel","JSON","stringify","subscriptions","findAll","create","connected","rejected","disconnected","send","willAttemptReconnect","enqueueReflex","classList","contains","add","ActionCableTransport","beforeDOMUpdate","afterDOMUpdate","routeReflexEvent","eventType","eventTypes","nothing","StimulusReflexController","Controller","super","register","isolate","once","observer","MutationObserver","observe","documentElement","attributeFilter","childList","subtree","assign","stimulate","arguments","shift","Node","ELEMENT_NODE","validity","badInput","opts","reflexPermanent","check","reflexSerializeForm","context","scope","__perform","preventDefault","stopPropagation","useReflex","readyState","global"],"mappings":"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"}