{"version":3,"file":"stimulus_reflex.min.js","sources":["../javascript/schema.js","../javascript/debug.js","../javascript/reflex_store.js","../javascript/log.js","../javascript/deprecate.js","../javascript/utils.js","../javascript/attributes.js","../javascript/isolation_mode.js","../javascript/lifecycle.js","../javascript/controllers.js","../javascript/reflexes.js","../javascript/reflex_data.js","../javascript/transports/action_cable.js","../javascript/callbacks.js","../javascript/stimulus_reflex.js","../javascript/index.js"],"sourcesContent":["const defaultSchema = {\n  reflexAttribute: 'data-reflex',\n  reflexPermanentAttribute: 'data-reflex-permanent',\n  reflexRootAttribute: 'data-reflex-root',\n  reflexSuppressLoggingAttribute: 'data-reflex-suppress-logging',\n  reflexDatasetAttribute: 'data-reflex-dataset',\n  reflexDatasetAllAttribute: 'data-reflex-dataset-all',\n  reflexSerializeFormAttribute: 'data-reflex-serialize-form',\n  reflexFormSelectorAttribute: 'data-reflex-form-selector',\n  reflexIncludeInnerHtmlAttribute: 'data-reflex-include-inner-html',\n  reflexIncludeTextContentAttribute: 'data-reflex-include-text-content'\n}\n\nlet schema = {}\n\nexport { schema, defaultSchema }\n\nexport default {\n  set (application) {\n    schema = { ...defaultSchema, ...application.schema }\n    for (const attribute in schema) {\n      Object.defineProperty(this, attribute.slice(0, -9), {\n        get: () => {\n          return schema[attribute]\n        }\n      })\n    }\n  }\n}\n","let debugging = false\n\nexport default {\n  get enabled () {\n    return debugging\n  },\n  get disabled () {\n    return !debugging\n  },\n  get value () {\n    return debugging\n  },\n  set (value) {\n    debugging = !!value\n  },\n  set debug (value) {\n    debugging = !!value\n  }\n}\n","const reflexes = {}\n\nexport { reflexes }\n","import Debug from './debug'\n\nimport { reflexes } from './reflex_store'\n\nconst request = (\n  reflexId,\n  target,\n  args,\n  controller,\n  element,\n  controllerElement\n) => {\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  reflex.timestamp = new Date()\n  console.log(`\\u2191 stimulus \\u2191 ${target}`, {\n    reflexId,\n    args,\n    controller,\n    element,\n    controllerElement\n  })\n}\n\nconst success = event => {\n  const { detail } = event || {}\n  const { selector, payload } = detail || {}\n  const { reflexId, target, morph } = detail.stimulusReflex || {}\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  const progress =\n    reflex.totalOperations > 1\n      ? ` ${reflex.completedOperations}/${reflex.totalOperations}`\n      : ''\n  const duration = reflex.timestamp\n    ? `in ${new Date() - reflex.timestamp}ms`\n    : 'CLONED'\n  const operation = event.type\n    .split(':')[1]\n    .split('-')\n    .slice(1)\n    .join('_')\n  const output = { reflexId, morph, payload }\n  if (operation !== 'dispatch_event') output.operation = operation\n  console.log(\n    `\\u2193 reflex \\u2193 ${target} \\u2192 ${selector ||\n      '\\u221E'}${progress} ${duration}`,\n    output\n  )\n}\n\nconst halted = event => {\n  const { detail } = event || {}\n  const { reflexId, target, payload } = detail.stimulusReflex || {}\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  const duration = reflex.timestamp\n    ? `in ${new Date() - reflex.timestamp}ms`\n    : 'CLONED'\n  console.log(\n    `\\u2193 reflex \\u2193 ${target} ${duration} %cHALTED`,\n    'color: #ffa500;',\n    { reflexId, payload }\n  )\n}\n\nconst forbidden = event => {\n  const { detail } = event || {}\n  const { reflexId, target, payload } = detail.stimulusReflex || {}\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  const duration = reflex.timestamp\n    ? `in ${new Date() - reflex.timestamp}ms`\n    : 'CLONED'\n  console.log(\n    `\\u2193 reflex \\u2193 ${target} ${duration} %cFORBIDDEN`,\n    'color: #BF40BF;',\n    { reflexId, payload }\n  )\n}\n\nconst error = event => {\n  const { detail } = event || {}\n  const { reflexId, target, payload } = detail.stimulusReflex || {}\n  const reflex = reflexes[reflexId]\n  if (Debug.disabled || reflex.promise.data.suppressLogging) return\n  const duration = reflex.timestamp\n    ? `in ${new Date() - reflex.timestamp}ms`\n    : 'CLONED'\n  console.log(\n    `\\u2193 reflex \\u2193 ${target} ${duration} %cERROR: ${event.detail.body}`,\n    'color: #f00;',\n    { reflexId, payload }\n  )\n}\n\nexport default { request, success, halted, forbidden, error }\n","let deprecationWarnings = true\n\nexport default {\n  get enabled () {\n    return deprecationWarnings\n  },\n  get disabled () {\n    return !deprecationWarnings\n  },\n  get value () {\n    return deprecationWarnings\n  },\n  set (value) {\n    deprecationWarnings = !!value\n  },\n  set deprecate (value) {\n    deprecationWarnings = !!value\n  }\n}\n","// uuid4 function taken from stackoverflow\n// https://stackoverflow.com/a/2117523/554903\n\nconst uuidv4 = () => {\n  const crypto = window.crypto || window.msCrypto\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16)\n  )\n}\n\nconst serializeForm = (form, options = {}) => {\n  if (!form) return ''\n\n  const w = options.w || window\n  const { element } = options\n  const formData = new w.FormData(form)\n  const data = Array.from(formData, e => e.map(encodeURIComponent).join('='))\n  const submitButton = form.querySelector('input[type=submit]')\n  if (\n    element &&\n    element.name &&\n    element.nodeName === 'INPUT' &&\n    element.type === 'submit'\n  ) {\n    data.push(\n      `${encodeURIComponent(element.name)}=${encodeURIComponent(element.value)}`\n    )\n  } else if (submitButton && submitButton.name) {\n    data.push(\n      `${encodeURIComponent(submitButton.name)}=${encodeURIComponent(\n        submitButton.value\n      )}`\n    )\n  }\n  return Array.from(data).join('&')\n}\n\nconst camelize = (value, uppercaseFirstLetter = true) => {\n  if (typeof value !== 'string') return ''\n  value = value\n    .replace(/[\\s_](.)/g, $1 => $1.toUpperCase())\n    .replace(/[\\s_]/g, '')\n    .replace(/^(.)/, $1 => $1.toLowerCase())\n\n  if (uppercaseFirstLetter)\n    value = value.substr(0, 1).toUpperCase() + value.substr(1)\n\n  return value\n}\n\nconst debounce = (callback, delay = 250) => {\n  let timeoutId\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      callback(...args)\n    }, delay)\n  }\n}\n\nconst extractReflexName = reflexString => {\n  const match = reflexString.match(/(?:.*->)?(.*?)(?:Reflex)?#/)\n\n  return match ? match[1] : ''\n}\n\nconst emitEvent = (event, detail) => {\n  document.dispatchEvent(\n    new CustomEvent(event, {\n      bubbles: true,\n      cancelable: false,\n      detail\n    })\n  )\n  if (window.jQuery) window.jQuery(document).trigger(event, detail)\n}\n\n// construct a valid xPath for an element in the DOM\nconst elementToXPath = element => {\n  if (element.id !== '') return \"//*[@id='\" + element.id + \"']\"\n  if (element === document.body) return '/html/body'\n\n  let ix = 0\n  const siblings =\n    element && element.parentNode ? element.parentNode.childNodes : []\n\n  for (var i = 0; i < siblings.length; i++) {\n    const sibling = siblings[i]\n    if (sibling === element) {\n      const computedPath = elementToXPath(element.parentNode)\n      const tagName = element.tagName.toLowerCase()\n      const ixInc = ix + 1\n      return `${computedPath}/${tagName}[${ixInc}]`\n    }\n\n    if (sibling.nodeType === 1 && sibling.tagName === element.tagName) {\n      ix++\n    }\n  }\n}\n\nconst XPathToElement = xpath => {\n  return document.evaluate(\n    xpath,\n    document,\n    null,\n    XPathResult.FIRST_ORDERED_NODE_TYPE,\n    null\n  ).singleNodeValue\n}\n\nconst XPathToArray = (xpath, reverse = false) => {\n  const snapshotList = document.evaluate(\n    xpath,\n    document,\n    null,\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  )\n\n  const snapshots = []\n\n  for (let i = 0; i < snapshotList.snapshotLength; i++) {\n    snapshots.push(snapshotList.snapshotItem(i))\n  }\n\n  return reverse ? snapshots.reverse() : snapshots\n}\n\nexport {\n  uuidv4,\n  serializeForm,\n  camelize,\n  debounce,\n  extractReflexName,\n  emitEvent,\n  elementToXPath,\n  XPathToElement,\n  XPathToArray\n}\n","import Schema from './schema'\nimport Debug from './debug'\nimport Deprecate from './deprecate'\n\nimport { elementToXPath, XPathToArray } from './utils'\n\nconst multipleInstances = element => {\n  if (['checkbox', 'radio'].includes(element.type)) {\n    return (\n      document.querySelectorAll(\n        `input[type=\"${element.type}\"][name=\"${element.name}\"]`\n      ).length > 1\n    )\n  }\n  return false\n}\nconst collectCheckedOptions = element => {\n  return Array.from(element.querySelectorAll('option:checked'))\n    .concat(\n      Array.from(\n        document.querySelectorAll(\n          `input[type=\"${element.type}\"][name=\"${element.name}\"]`\n        )\n      ).filter(elem => elem.checked)\n    )\n    .map(o => o.value)\n}\n\n// Returns a string value for the passed array.\n//\n//   attributeValue(['', 'one', null, 'two', 'three ']) // 'one two three'\n//\nconst attributeValue = (values = []) => {\n  const value = Array.from(new Set(values.filter(v => v && String(v).length).map(v => v.trim()))).join(' ').trim()\n\n  return value.length > 0 ? value : null\n}\n\n// Returns an array for the passed string value by splitting on whitespace.\n//\n//   attributeValues('one two three ') // ['one', 'two', 'three']\n//\nconst attributeValues = value => {\n  if (!value) return []\n  if (!value.length) return []\n  return value.split(' ').filter(v => v.trim().length)\n}\n\n// Extracts attributes from a DOM element.\n//\nconst extractElementAttributes = element => {\n  let attrs = Array.from(element.attributes).reduce((memo, attr) => {\n    memo[attr.name] = attr.value\n    return memo\n  }, {})\n\n  attrs.checked = !!element.checked\n  attrs.selected = !!element.selected\n  attrs.tag_name = element.tagName\n\n  if (element.tagName.match(/select/i) || multipleInstances(element)) {\n    const collectedOptions = collectCheckedOptions(element)\n    attrs.values = collectedOptions\n    attrs.value = collectedOptions.join(',')\n  } else {\n    attrs.value = element.value\n  }\n  return attrs\n}\n\n// Returns an array of elements for the provided tokens.\n// Tokens is an array of space separated string coming from the `data-reflex-dataset`\n// or `data-reflex-dataset-all` attribute.\n//\nconst getElementsFromTokens = (element, tokens) => {\n  if (!tokens || tokens.length === 0) return []\n\n  let elements = [element]\n\n  const xPath = elementToXPath(element)\n\n  tokens.forEach(token => {\n    try {\n      switch (token) {\n        case 'combined':\n          if (Deprecate.enabled)\n            console.warn(\n              \"In the next version of StimulusReflex, the 'combined' option to data-reflex-dataset will become 'ancestors'.\"\n            )\n          elements = [\n            ...elements,\n            ...XPathToArray(`${xPath}/ancestor::*`, true)\n          ]\n          break\n        case 'ancestors':\n          elements = [\n            ...elements,\n            ...XPathToArray(`${xPath}/ancestor::*`, true)\n          ]\n          break\n        case 'parent':\n          elements = [...elements, ...XPathToArray(`${xPath}/parent::*`)]\n          break\n        case 'siblings':\n          elements = [\n            ...elements,\n            ...XPathToArray(\n              `${xPath}/preceding-sibling::*|${xPath}/following-sibling::*`\n            )\n          ]\n          break\n        case 'children':\n          elements = [...elements, ...XPathToArray(`${xPath}/child::*`)]\n          break\n        case 'descendants':\n          elements = [...elements, ...XPathToArray(`${xPath}/descendant::*`)]\n          break\n        default:\n          elements = [...elements, ...document.querySelectorAll(token)]\n      }\n    } catch (error) {\n      if (Debug.enabled) console.error(error)\n    }\n  })\n\n  return elements\n}\n\n// Extracts the dataset of an element and combines it with the data attributes from all specified tokens\n//\nconst extractElementDataset = element => {\n  const dataset = element.attributes[Schema.reflexDataset]\n  const allDataset = element.attributes[Schema.reflexDatasetAll]\n\n  const tokens = (dataset && dataset.value.split(' ')) || []\n  const allTokens = (allDataset && allDataset.value.split(' ')) || []\n\n  const datasetElements = getElementsFromTokens(element, tokens)\n  const datasetAllElements = getElementsFromTokens(element, allTokens)\n\n  const datasetAttributes = datasetElements.reduce((acc, ele) => {\n    return { ...extractDataAttributes(ele), ...acc }\n  }, {})\n\n  const reflexElementAttributes = extractDataAttributes(element)\n\n  const elementDataset = {\n    dataset: { ...reflexElementAttributes, ...datasetAttributes },\n    datasetAll: {}\n  }\n\n  datasetAllElements.forEach(element => {\n    const elementAttributes = extractDataAttributes(element)\n\n    Object.keys(elementAttributes).forEach(key => {\n      const value = elementAttributes[key]\n\n      if (\n        elementDataset.datasetAll[key] &&\n        Array.isArray(elementDataset.datasetAll[key])\n      ) {\n        elementDataset.datasetAll[key].push(value)\n      } else {\n        elementDataset.datasetAll[key] = [value]\n      }\n    })\n  })\n\n  return elementDataset\n}\n\n// Extracts all data attributes from a DOM element.\n//\nconst extractDataAttributes = element => {\n  let attrs = {}\n\n  if (element && element.attributes) {\n    Array.from(element.attributes).forEach(attr => {\n      if (attr.name.startsWith('data-')) {\n        attrs[attr.name] = attr.value\n      }\n    })\n  }\n\n  return attrs\n}\n\nexport {\n  attributeValue,\n  attributeValues,\n  extractElementAttributes,\n  extractElementDataset,\n  extractDataAttributes\n}\n","let isolationMode = false\n\nexport default {\n  get disabled () {\n    return !isolationMode\n  },\n  set (value) {\n    isolationMode = value\n  }\n}\n","import Debug from './debug'\n\nimport { camelize } from './utils'\nimport { reflexes } from './reflex_store'\n\n// Invokes a lifecycle method on a StimulusReflex controller.\n//\n// - stage - the lifecycle stage\n//   * before\n//   * success\n//   * error\n//   * halted\n//   * forbidden\n//   * after\n//   * finalize\n//\n// - reflexElement - the element that triggered the Reflex (not necessarily the StimulusReflex Controller Element)\n// - controllerElement - the element holding the StimulusReflex Controller\n// - reflexId - the UUIDv4 which uniquely identifies the Reflex\n// - payload - the optional \"return value\" from the Reflex method\n//\nconst invokeLifecycleMethod = (\n  stage,\n  reflexElement,\n  controllerElement,\n  reflexId,\n  payload\n) => {\n  if (!controllerElement || !controllerElement.reflexData[reflexId]) return\n\n  const controller = controllerElement.reflexController[reflexId]\n  const reflex = controllerElement.reflexData[reflexId].target\n  const reflexMethodName = reflex.split('#')[1]\n\n  const specificLifecycleMethodName = ['before', 'after', 'finalize'].includes(\n    stage\n  )\n    ? `${stage}${camelize(reflexMethodName)}`\n    : `${camelize(reflexMethodName, false)}${camelize(stage)}`\n  const specificLifecycleMethod = controller[specificLifecycleMethodName]\n\n  const genericLifecycleMethodName = ['before', 'after', 'finalize'].includes(\n    stage\n  )\n    ? `${stage}Reflex`\n    : `reflex${camelize(stage)}`\n  const genericLifecycleMethod = controller[genericLifecycleMethodName]\n\n  if (typeof specificLifecycleMethod === 'function') {\n    specificLifecycleMethod.call(\n      controller,\n      reflexElement,\n      reflex,\n      controllerElement.reflexError[reflexId],\n      reflexId,\n      payload\n    )\n  }\n\n  if (typeof genericLifecycleMethod === 'function') {\n    genericLifecycleMethod.call(\n      controller,\n      reflexElement,\n      reflex,\n      controllerElement.reflexError[reflexId],\n      reflexId,\n      payload\n    )\n  }\n\n  if (reflexes[reflexId] && stage === reflexes[reflexId].finalStage) {\n    Reflect.deleteProperty(controllerElement.reflexController, reflexId)\n    Reflect.deleteProperty(controllerElement.reflexData, reflexId)\n    Reflect.deleteProperty(controllerElement.reflexError, reflexId)\n    // Removing this on a trial basis\n    // 1. Prevents race condition with CR broadcasts\n    // 2. Planning to remove it for v4 as part of queueing refactor\n    // 3. Removing reflexes shouldn't be the responsibility of the lifecycle subsystem\n    // Reflect.deleteProperty(reflexes, reflexId)\n  }\n}\n\ndocument.addEventListener(\n  'stimulus-reflex:before',\n  event =>\n    invokeLifecycleMethod(\n      'before',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:success',\n  event => {\n    invokeLifecycleMethod(\n      'success',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n    dispatchLifecycleEvent(\n      'after',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n  },\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:nothing',\n  event => {\n    dispatchLifecycleEvent(\n      'success',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n  },\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:error',\n  event => {\n    invokeLifecycleMethod(\n      'error',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n    dispatchLifecycleEvent(\n      'after',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    )\n  },\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:halted',\n  event =>\n    invokeLifecycleMethod(\n      'halted',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:forbidden',\n  event =>\n    invokeLifecycleMethod(\n      'forbidden',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:after',\n  event =>\n    invokeLifecycleMethod(\n      'after',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\ndocument.addEventListener(\n  'stimulus-reflex:finalize',\n  event =>\n    invokeLifecycleMethod(\n      'finalize',\n      event.detail.element,\n      event.detail.controller.element,\n      event.detail.reflexId,\n      event.detail.payload\n    ),\n  true\n)\n\n// Dispatches a lifecycle event on document\n//\n// - stage - the lifecycle stage\n//   * before\n//   * success\n//   * error\n//   * halted\n//   * forbidden\n//   * after\n//   * finalize\n//\n// - reflexElement - the element that triggered the Reflex (not necessarily the StimulusReflex Controller Element)\n//\n// - controllerElement - the element holding the StimulusReflex Controller\n//\n// - reflexId - the UUIDv4 which uniquely identifies the Reflex\n//\n// - payload - optional Reflex return value\n//\nconst dispatchLifecycleEvent = (\n  stage,\n  reflexElement,\n  controllerElement,\n  reflexId,\n  payload\n) => {\n  if (!controllerElement) {\n    if (Debug.enabled && !reflexes[reflexId].warned) {\n      console.warn(\n        `StimulusReflex was not able execute callbacks or emit events for \"${stage}\" or later life-cycle stages for this Reflex. The StimulusReflex Controller Element is no longer present in the DOM. Could you move the StimulusReflex Controller to an element higher in your DOM?`\n      )\n      reflexes[reflexId].warned = true\n    }\n    return\n  }\n\n  if (\n    !controllerElement.reflexController ||\n    (controllerElement.reflexController &&\n      !controllerElement.reflexController[reflexId])\n  ) {\n    if (Debug.enabled && !reflexes[reflexId].warned) {\n      console.warn(\n        `StimulusReflex detected that the StimulusReflex Controller responsible for this Reflex has been replaced with a new instance. Callbacks and events for \"${stage}\" or later life-cycle stages cannot be executed.`\n      )\n      reflexes[reflexId].warned = true\n    }\n    return\n  }\n\n  const { target } = controllerElement.reflexData[reflexId] || {}\n  const controller = controllerElement.reflexController[reflexId] || {}\n  const event = `stimulus-reflex:${stage}`\n  const action = `${event}:${target.split('#')[1]}`\n  const detail = {\n    reflex: target,\n    controller,\n    reflexId,\n    element: reflexElement,\n    payload\n  }\n  const options = { bubbles: true, cancelable: false, detail }\n\n  controllerElement.dispatchEvent(new CustomEvent(event, options))\n  controllerElement.dispatchEvent(new CustomEvent(action, options))\n\n  if (window.jQuery) {\n    window.jQuery(controllerElement).trigger(event, detail)\n    window.jQuery(controllerElement).trigger(action, detail)\n  }\n}\n\nexport { dispatchLifecycleEvent }\n","import Schema from './schema'\n\nimport { attributeValues } from './attributes'\nimport { extractReflexName } from './utils'\n\n// Returns StimulusReflex controllers local to the passed element based on the data-controller attribute.\n//\nconst localReflexControllers = (app, element) => {\n  return attributeValues(element.getAttribute(Schema.controller)).reduce(\n    (memo, name) => {\n      const controller = app.getControllerForElementAndIdentifier(element, name)\n      if (controller && controller.StimulusReflex) memo.push(controller)\n      return memo\n    },\n    []\n  )\n}\n\n// Returns all StimulusReflex controllers for the passed element.\n// Traverses DOM ancestors starting with element.\n//\nconst allReflexControllers = (app, element) => {\n  let controllers = []\n  while (element) {\n    controllers = controllers.concat(localReflexControllers(app, element))\n    element = element.parentElement\n  }\n  return controllers\n}\n\n// Given a reflex string such as 'click->TestReflex#create' and a list of\n// controllers. It will find the matching controller based on the controller's\n// identifier. e.g. Given these controller identifiers ['foo', 'bar', 'test'],\n// it would select the 'test' controller.\nconst findControllerByReflexName = (reflexName, controllers) => {\n  const controller = controllers.find(controller => {\n    if (!controller.identifier) return\n\n    return (\n      extractReflexName(reflexName)\n        .replace(/([a-z0–9])([A-Z])/g, '$1-$2')\n        .replace(/(::)/g, '--')\n        .toLowerCase() === controller.identifier\n    )\n  })\n\n  return controller || controllers[0]\n}\n\nexport { allReflexControllers, findControllerByReflexName }\n","import CableReady from 'cable_ready'\n\nimport Debug from './debug'\nimport Schema from './schema'\nimport IsolationMode from './isolation_mode'\n\nimport { reflexes } from './reflex_store'\nimport { dispatchLifecycleEvent } from './lifecycle'\nimport { XPathToElement, debounce, emitEvent } from './utils'\nimport { allReflexControllers, findControllerByReflexName } from './controllers'\nimport { attributeValue, attributeValues } from './attributes'\n\nconst received = data => {\n  if (!data.cableReady) return\n\n  if (data.version.replace('.pre', '-pre') !== CableReady.version) {\n    if (Debug.enabled)\n      console.error(\n        `Reflex failed due to cable_ready gem/NPM package version mismatch. Package versions must match exactly.\\nNote that if you are using pre-release builds, gems use the \"x.y.z.preN\" version format, while NPM packages use \"x.y.z-preN\".\\n\\ncable_ready gem: ${data.version}\\ncable_ready NPM: ${CableReady.version}`\n      )\n    return\n  }\n\n  let reflexOperations = []\n\n  for (let i = data.operations.length - 1; i >= 0; i--) {\n    if (data.operations[i].stimulusReflex) {\n      reflexOperations.push(data.operations[i])\n      data.operations.splice(i, 1)\n    }\n  }\n\n  if (\n    reflexOperations.some(\n      operation => operation.stimulusReflex.url !== location.href\n    )\n  ) {\n    return\n  }\n\n  let reflexData\n\n  if (reflexOperations.length) {\n    reflexData = reflexOperations[0].stimulusReflex\n    reflexData.payload = reflexOperations[0].payload\n  }\n\n  if (reflexData) {\n    const { reflexId, payload } = reflexData\n\n    if (!reflexes[reflexId] && IsolationMode.disabled) {\n      const controllerElement = XPathToElement(reflexData.xpathController)\n      const reflexElement = XPathToElement(reflexData.xpathElement)\n\n      controllerElement.reflexController =\n        controllerElement.reflexController || {}\n      controllerElement.reflexData = controllerElement.reflexData || {}\n      controllerElement.reflexError = controllerElement.reflexError || {}\n\n      controllerElement.reflexController[\n        reflexId\n      ] = reflexes.app.getControllerForElementAndIdentifier(\n        controllerElement,\n        reflexData.reflexController\n      )\n\n      controllerElement.reflexData[reflexId] = reflexData\n\n      dispatchLifecycleEvent(\n        'before',\n        reflexElement,\n        controllerElement,\n        reflexId,\n        payload\n      )\n\n      registerReflex(reflexData)\n    }\n\n    if (reflexes[reflexId]) {\n      reflexes[reflexId].totalOperations = reflexOperations.length\n      reflexes[reflexId].pendingOperations = reflexOperations.length\n      reflexes[reflexId].completedOperations = 0\n      reflexes[reflexId].piggybackOperations = data.operations\n      CableReady.perform(reflexOperations)\n    }\n  } else {\n    if (data.operations.length && reflexes[data.operations[0].reflexId]) {\n      CableReady.perform(data.operations)\n    }\n  }\n}\n\nconst registerReflex = data => {\n  const { reflexId } = data\n  reflexes[reflexId] = { finalStage: 'finalize' }\n\n  const promise = new Promise((resolve, reject) => {\n    reflexes[reflexId].promise = {\n      resolve,\n      reject,\n      data\n    }\n  })\n\n  promise.reflexId = reflexId\n\n  if (Debug.enabled) promise.catch(() => {})\n\n  return promise\n}\n\n// compute the DOM element(s) which will be the morph root\n// use the data-reflex-root attribute on the reflex or the controller\n// optional value is a CSS selector(s); comma-separated list\n// order of preference is data-reflex, data-controller, document body (default)\nconst getReflexRoots = element => {\n  let list = []\n  while (list.length === 0 && element) {\n    let reflexRoot = element.getAttribute(Schema.reflexRoot)\n    if (reflexRoot) {\n      if (reflexRoot.length === 0 && element.id) reflexRoot = `#${element.id}`\n      const selectors = reflexRoot.split(',').filter(s => s.trim().length)\n      if (Debug.enabled && selectors.length === 0) {\n        console.error(\n          `No value found for ${Schema.reflexRoot}. Add an #id to the element or provide a value for ${Schema.reflexRoot}.`,\n          element\n        )\n      }\n      list = list.concat(selectors.filter(s => document.querySelector(s)))\n    }\n    element = element.parentElement\n      ? element.parentElement.closest(`[${Schema.reflexRoot}]`)\n      : null\n  }\n  return list\n}\n\n// Sets up declarative reflex behavior for a single element\n//\nconst setupDeclarativeReflexesForElement = (element) => {\n  const controllerAttribute = element.getAttribute(Schema.controller)\n  const controllers = attributeValues(controllerAttribute)\n\n  const reflexAttribute = element.getAttribute(Schema.reflex)\n  const reflexAttributeNames = attributeValues(reflexAttribute)\n\n  const actionAttribute = element.getAttribute(Schema.action)\n  const actions = attributeValues(actionAttribute).filter(action => !action.includes(\"#__perform\"))\n\n  reflexAttributeNames.forEach(reflexName => {\n    const controller = findControllerByReflexName(\n      reflexName,\n      allReflexControllers(reflexes.app, element)\n    )\n    const controllerName = controller ? controller.identifier : 'stimulus-reflex'\n\n    actions.push(`${reflexName.split('->')[0]}->${controllerName}#__perform`)\n    controllers.push('stimulus-reflex')\n  })\n\n  const controllerValue = attributeValue(controllers)\n  const actionValue = attributeValue(actions)\n\n  if (controllerValue && element.getAttribute(Schema.controller) != controllerValue) {\n    element.setAttribute(Schema.controller, controllerValue)\n  }\n\n  if (actionValue && element.getAttribute(Schema.action) != actionValue) {\n    element.setAttribute(Schema.action, actionValue)\n  }\n}\n\n// Sets up declarative reflex behavior.\n// Any elements that define data-reflex will automatically be wired up with the default StimulusReflexController.\n//\nconst setupDeclarativeReflexes = debounce(() => {\n  const reflexElements = document.querySelectorAll(`[${Schema.reflex}]`)\n  reflexElements.forEach(element => setupDeclarativeReflexesForElement(element))\n  emitEvent('stimulus-reflex:ready')\n}, 20)\n\nexport { received, registerReflex, getReflexRoots, setupDeclarativeReflexes, setupDeclarativeReflexesForElement }\n","import Schema from './schema'\n\nimport { extractElementAttributes, extractElementDataset } from './attributes'\nimport { getReflexRoots } from './reflexes'\nimport { uuidv4 } from './utils'\nimport { elementToXPath } from './utils'\n\nimport packageInfo from '../package.json'\n\nexport default class ReflexData {\n  constructor (\n    options,\n    reflexElement,\n    controllerElement,\n    reflexController,\n    permanentAttributeName,\n    target,\n    args,\n    url,\n    tabId\n  ) {\n    this.options = options\n    this.reflexElement = reflexElement\n    this.controllerElement = controllerElement\n    this.reflexController = reflexController\n    this.permanentAttributeName = permanentAttributeName\n    this.target = target\n    this.args = args\n    this.url = url\n    this.tabId = tabId\n  }\n\n  get attrs () {\n    this._attrs =\n      this._attrs ||\n      this.options['attrs'] ||\n      extractElementAttributes(this.reflexElement)\n\n    return this._attrs\n  }\n\n  get reflexId () {\n    this._reflexId = this._reflexId || this.options['reflexId'] || uuidv4()\n    return this._reflexId\n  }\n\n  get selectors () {\n    this._selectors =\n      this._selectors ||\n      this.options['selectors'] ||\n      getReflexRoots(this.reflexElement)\n\n    return typeof this._selectors === 'string'\n      ? [this._selectors]\n      : this._selectors\n  }\n\n  get resolveLate () {\n    return this.options['resolveLate'] || false\n  }\n\n  get dataset () {\n    this._dataset = this._dataset || extractElementDataset(this.reflexElement)\n    return this._dataset\n  }\n\n  get innerHTML () {\n    return this.includeInnerHtml ? this.reflexElement.innerHTML : ''\n  }\n\n  get textContent () {\n    return this.includeTextContent ? this.reflexElement.textContent : ''\n  }\n\n  get xpathController () {\n    return elementToXPath(this.controllerElement)\n  }\n\n  get xpathElement () {\n    return elementToXPath(this.reflexElement)\n  }\n\n  get formSelector () {\n    const attr = this.reflexElement.attributes[Schema.reflexFormSelector]\n      ? this.reflexElement.attributes[Schema.reflexFormSelector].value\n      : undefined\n    return this.options['formSelector'] || attr\n  }\n\n  get includeInnerHtml () {\n    const attr =\n      this.reflexElement.attributes[Schema.reflexIncludeInnerHtml] || false\n    return this.options['includeInnerHTML'] || attr\n      ? attr.value !== 'false'\n      : false\n  }\n\n  get includeTextContent () {\n    const attr =\n      this.reflexElement.attributes[Schema.reflexIncludeTextContent] || false\n    return this.options['includeTextContent'] || attr\n      ? attr.value !== 'false'\n      : false\n  }\n\n  get suppressLogging () {\n    return (\n      this.options['suppressLogging'] ||\n      this.reflexElement.attributes[Schema.reflexSuppressLogging] ||\n      false\n    )\n  }\n\n  valueOf () {\n    return {\n      attrs: this.attrs,\n      dataset: this.dataset,\n      selectors: this.selectors,\n      reflexId: this.reflexId,\n      resolveLate: this.resolveLate,\n      suppressLogging: this.suppressLogging,\n      xpathController: this.xpathController,\n      xpathElement: this.xpathElement,\n      inner_html: this.innerHTML,\n      text_content: this.textContent,\n      formSelector: this.formSelector,\n      reflexController: this.reflexController,\n      permanentAttributeName: this.permanentAttributeName,\n      target: this.target,\n      args: this.args,\n      url: this.url,\n      tabId: this.tabId,\n      version: packageInfo.version\n    }\n  }\n}\n","import { createConsumer } from '@rails/actioncable'\nimport { received } from '../reflexes'\nimport { emitEvent } from '../utils'\nimport Deprecate from '../deprecate'\n\nlet consumer\nlet params\nlet subscription\nlet active\nlet queue = []\n\nconst initialize = (consumerValue, paramsValue) => {\n  consumer = consumerValue\n  params = paramsValue\n  document.addEventListener('DOMContentLoaded', () => {\n    active = false\n    connectionStatusClass()\n    if (Deprecate.enabled && consumer)\n      console.warn(\n        \"Deprecation warning: the next version of StimulusReflex will obtain a reference to consumer via the Stimulus application object.\\nPlease add 'application.consumer = consumer' to your index.js after your Stimulus application has been established, and remove the consumer key from your StimulusReflex initialize() options object.\"\n      )\n  })\n  document.addEventListener('turbolinks:load', connectionStatusClass)\n  document.addEventListener('turbo:load', connectionStatusClass)\n}\n\nconst subscribe = controller => {\n  if (subscription) return\n  consumer = consumer || controller.application.consumer || createConsumer()\n  const { channel } = controller.StimulusReflex\n  const request = { channel, ...params }\n  const identifier = JSON.stringify(request)\n\n  subscription =\n    consumer.subscriptions.findAll(identifier)[0] ||\n    consumer.subscriptions.create(request, {\n      received,\n      connected,\n      rejected,\n      disconnected\n    })\n}\n\nconst connected = () => {\n  active = true\n  connectionStatusClass()\n  emitEvent('stimulus-reflex:connected')\n  emitEvent('stimulus-reflex:action-cable:connected')\n\n  queue.forEach(reflex => subscription.send(reflex))\n  queue = []\n}\n\nconst rejected = () => {\n  active = false\n  connectionStatusClass()\n  emitEvent('stimulus-reflex:rejected')\n  emitEvent('stimulus-reflex:action-cable:rejected')\n  if (Debug.enabled) console.warn('Channel subscription was rejected.')\n}\n\nconst disconnected = willAttemptReconnect => {\n  active = false\n  connectionStatusClass()\n  emitEvent('stimulus-reflex:disconnected', willAttemptReconnect)\n  emitEvent('stimulus-reflex:action-cable:disconnected', willAttemptReconnect)\n}\n\nconst enqueueReflex = (element, id) => {\n  const reflex = element.reflexData[id]\n  active ? subscription.send(reflex) : queue.push(reflex)\n}\n\nconst connectionStatusClass = () => {\n  const list = document.body.classList\n  if (\n    !(\n      list.contains('stimulus-reflex-connected') ||\n      list.contains('stimulus-reflex-disconnected')\n    )\n  ) {\n    list.add(\n      active ? 'stimulus-reflex-connected' : 'stimulus-reflex-disconnected'\n    )\n    return\n  }\n  if (active) {\n    list.replace('stimulus-reflex-disconnected', 'stimulus-reflex-connected')\n  } else {\n    list.replace('stimulus-reflex-connected', 'stimulus-reflex-disconnected')\n  }\n}\n\nexport default {\n  subscribe,\n  enqueueReflex,\n  initialize\n}\n","import CableReady from 'cable_ready'\n\nimport Log from './log'\n\nimport { reflexes } from './reflex_store'\nimport { dispatchLifecycleEvent } from './lifecycle'\nimport { XPathToElement } from './utils'\n\nconst beforeDOMUpdate = event => {\n  const { stimulusReflex, payload } = event.detail || {}\n  if (!stimulusReflex) return\n  const { reflexId, xpathElement, xpathController } = stimulusReflex\n  const controllerElement = XPathToElement(xpathController)\n  const reflexElement = XPathToElement(xpathElement)\n  const reflex = reflexes[reflexId]\n  const { promise } = reflex\n\n  reflex.pendingOperations--\n\n  if (reflex.pendingOperations > 0) return\n\n  if (!stimulusReflex.resolveLate)\n    setTimeout(() =>\n      promise.resolve({\n        element: reflexElement,\n        event,\n        data: promise.data,\n        payload,\n        reflexId,\n        toString: () => ''\n      })\n    )\n\n  setTimeout(() =>\n    dispatchLifecycleEvent(\n      'success',\n      reflexElement,\n      controllerElement,\n      reflexId,\n      payload\n    )\n  )\n}\n\nconst afterDOMUpdate = event => {\n  const { stimulusReflex, payload } = event.detail || {}\n  if (!stimulusReflex) return\n  const { reflexId, xpathElement, xpathController } = stimulusReflex\n  const controllerElement = XPathToElement(xpathController)\n  const reflexElement = XPathToElement(xpathElement)\n  const reflex = reflexes[reflexId]\n  const { promise } = reflex\n\n  reflex.completedOperations++\n\n  Log.success(event, false)\n\n  if (reflex.completedOperations < reflex.totalOperations) return\n\n  if (stimulusReflex.resolveLate)\n    setTimeout(() =>\n      promise.resolve({\n        element: reflexElement,\n        event,\n        data: promise.data,\n        payload,\n        reflexId,\n        toString: () => ''\n      })\n    )\n\n  setTimeout(() =>\n    dispatchLifecycleEvent(\n      'finalize',\n      reflexElement,\n      controllerElement,\n      reflexId,\n      payload\n    )\n  )\n\n  if (reflex.piggybackOperations.length)\n    CableReady.perform(reflex.piggybackOperations)\n}\n\nconst routeReflexEvent = event => {\n  const { stimulusReflex, payload, name, body } = event.detail || {}\n  const eventType = name.split('-')[2]\n\n  const eventTypes = {\n    nothing: nothing,\n    halted: halted,\n    forbidden: forbidden,\n    error: error\n  }\n\n  if (!stimulusReflex || !Object.keys(eventTypes).includes(eventType)) return\n\n  const { reflexId, xpathElement, xpathController } = stimulusReflex\n  const reflexElement = XPathToElement(xpathElement)\n  const controllerElement = XPathToElement(xpathController)\n  const reflex = reflexes[reflexId]\n  const { promise } = reflex\n\n  if (controllerElement) {\n    controllerElement.reflexError = controllerElement.reflexError || {}\n    if (eventType === 'error') controllerElement.reflexError[reflexId] = body\n  }\n\n  eventTypes[eventType](event, payload, promise, reflex, reflexElement)\n\n  setTimeout(() =>\n    dispatchLifecycleEvent(\n      eventType,\n      reflexElement,\n      controllerElement,\n      reflexId,\n      payload\n    )\n  )\n\n  if (reflex.piggybackOperations.length)\n    CableReady.perform(reflex.piggybackOperations)\n}\n\nconst nothing = (event, payload, promise, reflex, reflexElement) => {\n  reflex.finalStage = 'after'\n\n  Log.success(event)\n\n  setTimeout(() =>\n    promise.resolve({\n      data: promise.data,\n      element: reflexElement,\n      event,\n      payload,\n      reflexId: promise.data.reflexId,\n      toString: () => ''\n    })\n  )\n}\n\nconst halted = (event, payload, promise, reflex, reflexElement) => {\n  reflex.finalStage = 'halted'\n\n  Log.halted(event)\n\n  setTimeout(() =>\n    promise.resolve({\n      data: promise.data,\n      element: reflexElement,\n      event,\n      payload,\n      reflexId: promise.data.reflexId,\n      toString: () => ''\n    })\n  )\n}\n\nconst forbidden = (event, payload, promise, reflex, reflexElement) => {\n  reflex.finalStage = 'forbidden'\n\n  Log.forbidden(event)\n\n  setTimeout(() =>\n    promise.resolve({\n      data: promise.data,\n      element: reflexElement,\n      event,\n      payload,\n      reflexId: promise.data.reflexId,\n      toString: () => ''\n    })\n  )\n}\n\nconst error = (event, payload, promise, reflex, reflexElement) => {\n  reflex.finalStage = 'after'\n\n  Log.error(event)\n\n  setTimeout(() =>\n    promise.reject({\n      data: promise.data,\n      element: reflexElement,\n      event,\n      payload,\n      reflexId: promise.data.reflexId,\n      error: event.detail.body,\n      toString: () => event.detail.body\n    })\n  )\n}\n\nexport { beforeDOMUpdate, afterDOMUpdate, routeReflexEvent }\n","import { Controller } from '@hotwired/stimulus'\n\nimport Schema from './schema'\nimport Log from './log'\nimport Debug from './debug'\nimport Deprecate from './deprecate'\nimport ReflexData from './reflex_data'\nimport IsolationMode from './isolation_mode'\nimport ActionCableTransport from './transports/action_cable'\n\nimport { dispatchLifecycleEvent } from './lifecycle'\nimport { uuidv4, serializeForm } from './utils'\nimport { beforeDOMUpdate, afterDOMUpdate, routeReflexEvent } from './callbacks'\nimport { registerReflex, setupDeclarativeReflexes, setupDeclarativeReflexesForElement } from './reflexes'\nimport { reflexes } from './reflex_store'\nimport { attributeValues } from './attributes'\n\n// Default StimulusReflexController that is implicitly wired up as data-controller for any DOM elements\n// that have configured data-reflex. Note that this default can be overridden when initializing the application.\n// i.e. StimulusReflex.initialize(myStimulusApplication, MyCustomDefaultController);\n//\nclass StimulusReflexController extends Controller {\n  constructor (...args) {\n    super(...args)\n    register(this)\n  }\n}\n\n// Initializes StimulusReflex by registering the default Stimulus controller with the passed Stimulus application.\n//\n// - application  - the Stimulus application\n// - options\n//   * controller - [optional] the default StimulusReflexController\n//   * consumer   - [optional] the ActionCable consumer\n//   * debug      - [false] log all Reflexes to the console\n//   * params     - [{}] key/value parameters to send during channel subscription\n//   * isolate    - [false] restrict Reflex playback to the tab which initiated it\n//   * deprecate  - [true] show warnings regarding upcoming changes to the library\n//\nconst initialize = (\n  application,\n  { controller, consumer, debug, params, isolate, deprecate } = {}\n) => {\n  ActionCableTransport.initialize(consumer, params)\n  document.addEventListener(\n    'DOMContentLoaded',\n    () => {\n      if (Deprecate.enabled && IsolationMode.disabled)\n        console.warn(\n          'Deprecation warning: the next version of StimulusReflex will standardize isolation mode, and the isolate option will be removed.\\nPlease update your applications to assume that every tab will be isolated.'\n        )\n    },\n    { once: true }\n  )\n  IsolationMode.set(!!isolate)\n  reflexes.app = application\n  Schema.set(application)\n  reflexes.app.register(\n    'stimulus-reflex',\n    controller || StimulusReflexController\n  )\n  Debug.set(!!debug)\n  if (typeof deprecate !== 'undefined') Deprecate.set(deprecate)\n  const observer = new MutationObserver(setupDeclarativeReflexes)\n  observer.observe(document.documentElement, {\n    attributeFilter: [Schema.reflex, Schema.action],\n    childList: true,\n    subtree: true\n  })\n}\n\n// Registers a Stimulus controller and extends it with StimulusReflex behavior\n//\n// controller - the Stimulus controller\n// options - [optional] configuration\n//\nconst register = (controller, options = {}) => {\n  const channel = 'StimulusReflex::Channel'\n  controller.StimulusReflex = { ...options, channel }\n  ActionCableTransport.subscribe(controller)\n  Object.assign(controller, {\n    // Invokes a server side reflex method.\n    //\n    // - target - the reflex target (full name of the server side reflex) i.e. 'ReflexClassName#method'\n    // - reflexElement - [optional] the element that triggered the reflex, defaults to this.element\n    // - options - [optional] an object that contains at least one of attrs, reflexId, selectors, resolveLate, serializeForm\n    // - *args - remaining arguments are forwarded to the server side reflex method\n    //\n    stimulate () {\n      const url = location.href\n      const args = Array.from(arguments)\n      const target = args.shift() || 'StimulusReflex::Reflex#default_reflex'\n      const controllerElement = this.element\n      const reflexElement =\n        args[0] && args[0].nodeType === Node.ELEMENT_NODE\n          ? args.shift()\n          : controllerElement\n      if (\n        reflexElement.type === 'number' &&\n        reflexElement.validity &&\n        reflexElement.validity.badInput\n      ) {\n        if (Debug.enabled) console.warn('Reflex aborted: invalid numeric input')\n        return\n      }\n      const options = {}\n      if (\n        args[0] &&\n        typeof args[0] === 'object' &&\n        Object.keys(args[0]).filter(key =>\n          [\n            'attrs',\n            'selectors',\n            'reflexId',\n            'resolveLate',\n            'serializeForm',\n            'suppressLogging',\n            'includeInnerHTML',\n            'includeTextContent'\n          ].includes(key)\n        ).length\n      ) {\n        const opts = args.shift()\n        Object.keys(opts).forEach(o => (options[o] = opts[o]))\n      }\n\n      const reflexData = new ReflexData(\n        options,\n        reflexElement,\n        controllerElement,\n        this.identifier,\n        Schema.reflexPermanent,\n        target,\n        args,\n        url,\n        tabId\n      )\n\n      const reflexId = reflexData.reflexId\n\n      // lifecycle setup\n      controllerElement.reflexController =\n        controllerElement.reflexController || {}\n      controllerElement.reflexData = controllerElement.reflexData || {}\n      controllerElement.reflexError = controllerElement.reflexError || {}\n\n      controllerElement.reflexController[reflexId] = this\n      controllerElement.reflexData[reflexId] = reflexData.valueOf()\n\n      dispatchLifecycleEvent(\n        'before',\n        reflexElement,\n        controllerElement,\n        reflexId\n      )\n\n      setTimeout(() => {\n        const { params } = controllerElement.reflexData[reflexId] || {}\n        const check = reflexElement.attributes[Schema.reflexSerializeForm]\n        if (check) {\n          // not needed after v4 because this is only here for the deprecation warning\n          options['serializeForm'] = check.value !== 'false'\n        }\n\n        const form =\n          reflexElement.closest(reflexData.formSelector) ||\n          document.querySelector(reflexData.formSelector) ||\n          reflexElement.closest('form')\n\n        if (Deprecate.enabled && options['serializeForm'] === undefined && form)\n          console.warn(\n            `Deprecation warning: the next version of StimulusReflex will not serialize forms by default.\\nPlease set ${Schema.reflexSerializeForm}=\\\"true\\\" on your Reflex Controller Element or pass { serializeForm: true } as an option to stimulate.`\n          )\n        const formData =\n          options['serializeForm'] === false\n            ? ''\n            : serializeForm(form, {\n                element: reflexElement\n              })\n\n        controllerElement.reflexData[reflexId] = {\n          ...reflexData.valueOf(),\n          params,\n          formData\n        }\n\n        ActionCableTransport.enqueueReflex(controllerElement, reflexId)\n      })\n\n      const promise = registerReflex(reflexData.valueOf())\n\n      Log.request(\n        reflexId,\n        target,\n        args,\n        this.context.scope.identifier,\n        reflexElement,\n        controllerElement\n      )\n\n      return promise\n    },\n\n    // Wraps the call to stimulate for any data-reflex elements.\n    // This is internal and should not be invoked directly.\n    __perform (event) {\n      let element = event.target\n      let reflex\n\n      while (element && !reflex) {\n        reflex = element.getAttribute(Schema.reflex)\n        if (!reflex || !reflex.trim().length) element = element.parentElement\n      }\n\n      const match = attributeValues(reflex).find(\n        reflex => reflex.split('->')[0] === event.type\n      )\n\n      if (match) {\n        event.preventDefault()\n        event.stopPropagation()\n        this.stimulate(match.split('->')[1], element)\n      }\n    }\n  })\n\n  setupDeclarativeReflexesForElement(controller.element)\n}\n\n// Uniquely identify this browser tab in each Reflex\nconst tabId = uuidv4()\n\nconst useReflex = (controller, options = {}) => {\n  register(controller, options)\n}\n\ndocument.addEventListener('cable-ready:after-dispatch-event', routeReflexEvent)\ndocument.addEventListener('cable-ready:before-inner-html', beforeDOMUpdate)\ndocument.addEventListener('cable-ready:before-morph', beforeDOMUpdate)\ndocument.addEventListener('cable-ready:after-inner-html', afterDOMUpdate)\ndocument.addEventListener('cable-ready:after-morph', afterDOMUpdate)\ndocument.addEventListener('readystatechange', () => {\n  if (document.readyState === 'complete') {\n    setupDeclarativeReflexes()\n  }\n})\n\nexport { initialize, register, useReflex, setupDeclarativeReflexes }\n","export * from './stimulus_reflex'\n\nimport * as StimulusReflex from './stimulus_reflex'\n\nimport Debug from './debug'\nimport Deprecate from './deprecate'\n\nimport packageInfo from '../package.json'\n\nconst global = {\n  version: packageInfo.version,\n  ...StimulusReflex,\n  get debug () {\n    return Debug.value\n  },\n  set debug (value) {\n    Debug.set(!!value)\n  },\n  get deprecate () {\n    return Deprecate.value\n  },\n  set deprecate (value) {\n    Deprecate.set(!!value)\n  }\n}\n\nwindow.StimulusReflex = global\n\nexport default global\n"],"names":["defaultSchema","reflexAttribute","reflexPermanentAttribute","reflexRootAttribute","reflexSuppressLoggingAttribute","reflexDatasetAttribute","reflexDatasetAllAttribute","reflexSerializeFormAttribute","reflexFormSelectorAttribute","reflexIncludeInnerHtmlAttribute","reflexIncludeTextContentAttribute","schema","Schema","set","application","attribute","Object","defineProperty","this","slice","get","debugging","Debug$1","enabled","disabled","value","debug","reflexes","Log","reflexId","target","args","controller","element","controllerElement","reflex","Debug","promise","data","suppressLogging","timestamp","Date","console","log","event","detail","selector","payload","morph","stimulusReflex","progress","totalOperations","completedOperations","duration","operation","type","split","join","output","body","deprecationWarnings","Deprecate","deprecate","uuidv4","crypto","window","msCrypto","replace","c","getRandomValues","Uint8Array","toString","camelize","uppercaseFirstLetter","$1","toUpperCase","toLowerCase","substr","emitEvent","document","dispatchEvent","CustomEvent","bubbles","cancelable","jQuery","trigger","elementToXPath","id","ix","siblings","parentNode","childNodes","i","length","sibling","tagName","nodeType","XPathToElement","xpath","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","XPathToArray","reverse","snapshotList","ORDERED_NODE_SNAPSHOT_TYPE","snapshots","snapshotLength","push","snapshotItem","attributeValue","values","Array","from","Set","filter","v","String","map","trim","attributeValues","extractElementAttributes","attrs","attributes","reduce","memo","attr","name","checked","selected","tag_name","match","includes","querySelectorAll","multipleInstances","collectedOptions","concat","elem","o","collectCheckedOptions","getElementsFromTokens","tokens","elements","xPath","forEach","token","warn","error","extractDataAttributes","startsWith","isolationMode","IsolationMode","invokeLifecycleMethod","stage","reflexElement","reflexData","reflexController","reflexMethodName","specificLifecycleMethod","genericLifecycleMethod","call","reflexError","finalStage","Reflect","deleteProperty","addEventListener","dispatchLifecycleEvent","warned","action","options","localReflexControllers","app","getAttribute","getControllerForElementAndIdentifier","StimulusReflex","received","cableReady","version","CableReady","reflexOperations","operations","splice","some","url","location","href","xpathController","xpathElement","registerReflex","pendingOperations","piggybackOperations","perform","Promise","resolve","reject","catch","setupDeclarativeReflexesForElement","controllerAttribute","controllers","reflexAttributeNames","actionAttribute","actions","reflexName","find","identifier","reflexString","extractReflexName","findControllerByReflexName","parentElement","allReflexControllers","controllerName","controllerValue","actionValue","setAttribute","setupDeclarativeReflexes","callback","delay","timeoutId","clearTimeout","setTimeout","debounce","ReflexData","constructor","permanentAttributeName","tabId","_attrs","_reflexId","selectors","_selectors","list","reflexRoot","s","querySelector","closest","getReflexRoots","resolveLate","dataset","_dataset","reflexDataset","allDataset","reflexDatasetAll","allTokens","datasetElements","datasetAllElements","datasetAttributes","acc","ele","elementDataset","datasetAll","elementAttributes","keys","key","isArray","extractElementDataset","innerHTML","includeInnerHtml","textContent","includeTextContent","formSelector","reflexFormSelector","undefined","reflexIncludeInnerHtml","reflexIncludeTextContent","reflexSuppressLogging","valueOf","inner_html","text_content","packageInfo","consumer","params","subscription","active","queue","connected","connectionStatusClass","send","rejected","disconnected","willAttemptReconnect","classList","contains","add","ActionCableTransport","createConsumer","channel","request","JSON","stringify","subscriptions","findAll","create","consumerValue","paramsValue","beforeDOMUpdate","afterDOMUpdate","nothing","halted","forbidden","StimulusReflexController","Controller","super","register","initialize","isolate","once","MutationObserver","observe","documentElement","attributeFilter","childList","subtree","assign","stimulate","arguments","shift","Node","ELEMENT_NODE","validity","badInput","opts","reflexPermanent","check","reflexSerializeForm","form","formData","w","FormData","e","encodeURIComponent","submitButton","nodeName","serializeForm","context","scope","__perform","preventDefault","stopPropagation","useReflex","eventType","eventTypes","readyState","global"],"mappings":"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"}